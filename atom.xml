<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hxy(慌糖盐)</title>
  
  
  <link href="https://ethanh3514.github.io/atom.xml" rel="self"/>
  
  <link href="https://ethanh3514.github.io/"/>
  <updated>2024-04-10T11:51:08.121Z</updated>
  <id>https://ethanh3514.github.io/</id>
  
  <author>
    <name>EthanH3514</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring 拦截器 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E6%8B%A6%E6%88%AA%E5%99%A8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E6%8B%A6%E6%88%AA%E5%99%A8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T11:29:41.000Z</published>
    <updated>2024-04-10T11:51:08.121Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><ul><li>Spring Boot定义了HandlerInterceptor接口来实现自定义拦截器的功能</li><li>HandlerInterceptor接口定义了preHandle、postHandle、afterCompletion三种方法<ul><li>前端请求经过preHandle逐层调入控制器（从浅到深）</li><li>控制器的响应依次调用postHandle方法返回（从深到浅）</li><li>页面渲染完毕之后依次调用afterCompletion方法（从深到浅）</li></ul></li></ul><h4 id="拦截器的定义">拦截器的定义</h4><p>就是一个实现了 <code>HandlerInterceptor</code> 接口的类</p><p><code>com.hxy.helloworld/interceptor/LoginInterceptor.java</code></p><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> LoginInterceptor <span class="kw">implements</span> HandlerInterceptor <span class="op">{</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Override</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">boolean</span> <span class="fu">preHandle</span><span class="op">(</span>HttpServletRequest request<span class="op">,</span> HttpServletResponse response<span class="op">,</span> <span class="bu">Object</span> handler<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span><span class="op">{</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"LoginInterceptor"</span><span class="op">);</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="拦截器的注册">拦截器的注册</h4><ul><li><p>只定义没用，需要配置里注册</p></li><li><p><code>com.hxy.helloworld/config/Webconfig.java</code></p></li><li><p>可以指定拦截路径</p></li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Configuration</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> WebConfig <span class="kw">implements</span> WebMvcConfigurer <span class="op">{</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Override</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">addInterceptors</span><span class="op">(</span>InterceptorRegistry registry<span class="op">)</span> <span class="op">{</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>        registry<span class="op">.</span><span class="fu">addInterceptor</span><span class="op">(</span><span class="kw">new</span> <span class="fu">LoginInterceptor</span><span class="op">());</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>        <span class="co">//registry.addInterceptor(new LoginInterceptor()).addPathPatterns("/user/**");</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="拦截器" scheme="https://ethanh3514.github.io/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Spring 文件上传 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T10:49:41.000Z</published>
    <updated>2024-04-10T11:28:50.057Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><ul><li>Spring Boot工程嵌入的tomcat限制了请求的文件大小，每个文件的配置最大1Mb，单词请求的文件的总数不能大于10Mb</li><li>可以在配置文件（如application.properties）里更改</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">servlet</span><span class="op">.</span><span class="fu">multipart</span><span class="op">.</span><span class="fu">max</span><span class="op">-</span>file<span class="op">-</span>size<span class="op">=</span><span class="er">10</span>MB</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">servlet</span><span class="op">.</span><span class="fu">multipart</span><span class="op">.</span><span class="fu">max</span><span class="op">-</span>request<span class="op">-</span>size<span class="op">=</span><span class="er">10</span>MB</span></code></pre></div><p>示例</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RestController</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> FileUploadController <span class="op">{</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="co">//    @RequestMapping(value = "/upload", method = RequestMethod.POST)</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="at">@PostMapping</span><span class="op">(</span><span class="st">"/upload"</span><span class="op">)</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">up</span><span class="op">(</span><span class="bu">String</span> nickname<span class="op">,</span> MultipartFile photo<span class="op">,</span> HttpServletRequest request<span class="op">)</span> <span class="kw">throws</span> <span class="bu">IOException</span> <span class="op">{</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>nickname<span class="op">);</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>photo<span class="op">.</span><span class="fu">getOriginalFilename</span><span class="op">());</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="co">//        System.out.println(System.getProperty("user.dir"));</span></span><span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>photo<span class="op">.</span><span class="fu">getContentType</span><span class="op">());</span></span><span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> path <span class="op">=</span> request<span class="op">.</span><span class="fu">getServletContext</span><span class="op">().</span><span class="fu">getRealPath</span><span class="op">(</span><span class="st">"/upload/"</span><span class="op">);</span></span><span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>path<span class="op">);</span></span><span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>        <span class="fu">saveFile</span><span class="op">(</span>photo<span class="op">,</span> path<span class="op">);</span></span><span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"上传成功"</span><span class="op">;</span></span><span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">saveFile</span><span class="op">(</span>MultipartFile photo<span class="op">,</span> <span class="bu">String</span> path<span class="op">)</span> <span class="kw">throws</span> <span class="bu">IOException</span> <span class="op">{</span></span><span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>        <span class="bu">File</span> dir <span class="op">=</span> <span class="kw">new</span> <span class="bu">File</span><span class="op">(</span>path<span class="op">);</span></span><span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(!</span>dir<span class="op">.</span><span class="fu">exists</span><span class="op">())</span> <span class="op">{</span></span><span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>            dir<span class="op">.</span><span class="fu">mkdir</span><span class="op">();</span></span><span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>        <span class="bu">File</span> file <span class="op">=</span> <span class="kw">new</span> <span class="bu">File</span><span class="op">(</span>path<span class="op">,</span> photo<span class="op">.</span><span class="fu">getOriginalFilename</span><span class="op">());</span></span><span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>        photo<span class="op">.</span><span class="fu">transferTo</span><span class="op">(</span>file<span class="op">);</span></span><span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="文件上传" scheme="https://ethanh3514.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>Spring 静态资源 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T10:38:09.000Z</published>
    <updated>2024-04-10T10:49:59.703Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><h3 id="静态资源映射">静态资源映射</h3><p>静态资源默认在 <code>resources/static</code> 目录下</p><h4 id="静态资源过滤">静态资源过滤</h4><ul><li><p><code>application.properties</code> 文件中的配置信息</p></li><li><p>默认为 <code>/**</code> ，直接访问 <code>localhost:8080</code>之后加路径即可</p></li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">mvc</span><span class="op">.</span><span class="fu">static</span><span class="op">-</span>path<span class="op">-</span>pattern<span class="op">=</span><span class="co">/**</span>         </span></code></pre></div><ul><li>修改默认路径</li><li>访问静态资源需要为 <code>localhost:8080/images</code> 后加路径</li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">mvc</span><span class="op">.</span><span class="fu">static</span><span class="op">-</span>path<span class="op">-</span>pattern<span class="op">=/</span>images<span class="co">/**</span></span></code></pre></div><h4 id="静态资源位置">静态资源位置</h4><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">web</span><span class="op">.</span><span class="fu">resources</span><span class="op">.</span><span class="fu">static</span><span class="op">-</span>locations<span class="op">=</span>classpath<span class="op">:/</span><span class="dt">static</span><span class="op">/</span></span></code></pre></div><p>默认即 <code>target/classes</code> 下</p><p>一般不用调整</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="静态资源" scheme="https://ethanh3514.github.io/tags/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Spring Controller 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-Controller-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-Controller-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T08:56:13.000Z</published>
    <updated>2024-04-10T10:33:18.232Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><h3 id="控制器">控制器</h3><ul><li>Spring Boot 提供了 <code>@Controller</code> 和<code>@RestController</code> 两种注解来标识此类负责接收和处理http请求<ul><li><code>@Controller</code> 需要返回一个视图（可以理解为html页面）</li><li><code>@RestController</code> 可以以纯文本返回</li></ul></li></ul><h3 id="路由映射">路由映射</h3><ul><li><code>@RequestMapping("/user")</code></li><li>支持正则表达式匹配</li><li>Method 匹配：<code>@RequestMapping(value = "/getData", method = RequestMethod.GET)</code></li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RestController</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> HelloController <span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/hello"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">//    @GetMapping("/hello")</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="co">//这两种方式等价</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">hello</span><span class="op">()</span> <span class="op">{</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"你好"</span><span class="op">;</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>传参的参数名要对上</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/hello"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="co">//http://localhost:8080/hello?nickname=hxy</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">hello</span><span class="op">(</span><span class="bu">String</span> nickname<span class="op">,</span> <span class="bu">String</span> phone<span class="op">)</span> <span class="op">{</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>phone<span class="op">);</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"你好"</span> <span class="op">+</span> nickname<span class="op">;</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p><code>@RequestParam()</code> 指定必须参数，否则报错</p><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/getTest3"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getTest3</span><span class="op">(</span><span class="at">@RequestParam</span><span class="op">(</span><span class="st">"nickname"</span><span class="op">)</span> <span class="bu">String</span> name<span class="op">)</span> <span class="op">{</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"nickname:"</span> <span class="op">+</span> name<span class="op">);</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"GET请求"</span><span class="op">;</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>可以通过 <code>required=false</code> 关闭强制要求</p><div class="sourceCode" id="cb4"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/getTest3"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getTest3</span><span class="op">(</span><span class="at">@RequestParam</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"nickname"</span><span class="op">,</span>required <span class="op">=</span> <span class="kw">false</span><span class="op">)</span> <span class="bu">String</span> name<span class="op">)</span> <span class="op">{</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"nickname:"</span> <span class="op">+</span> name<span class="op">);</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"GET请求"</span><span class="op">;</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>用对象接收参数</p><div class="sourceCode" id="cb5"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/postTest1"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">POST</span><span class="op">)</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">postTest1</span><span class="op">(</span>User user<span class="op">)</span> <span class="op">{</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"POST请求"</span><span class="op">;</span></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>接收json</p><div class="sourceCode" id="cb6"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/postTest2"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">POST</span><span class="op">)</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">postTest2</span><span class="op">(</span><span class="at">@RequestBody</span> User user<span class="op">)</span> <span class="op">{</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"POST请求"</span><span class="op">;</span></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>通配符</p><div class="sourceCode" id="cb7"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/test/**"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">postTest3</span><span class="op">()</span> <span class="op">{</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"Hello"</span><span class="op">);</span></span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"POST"</span><span class="op">;</span></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="Controller" scheme="https://ethanh3514.github.io/tags/Controller/"/>
    
  </entry>
  
  <entry>
    <title>Spring 热部署</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E7%83%AD%E9%83%A8%E7%BD%B2/</id>
    <published>2024-04-10T08:44:35.000Z</published>
    <updated>2024-04-10T08:49:36.024Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><ol type="1"><li>在 <code>pom.xml</code> 里加入依赖 devtools</li></ol><div class="sourceCode" id="cb1"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">dependency</span>&gt;</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">groupId</span>&gt;org.springframework.boot&lt;/<span class="kw">groupId</span>&gt;</span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">artifactId</span>&gt;spring-boot-devtools&lt;/<span class="kw">artifactId</span>&gt;</span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">optional</span>&gt;true&lt;/<span class="kw">optional</span>&gt;</span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">dependency</span>&gt;</span></code></pre></div><ol start="2" type="1"><li>在 <code>application.properties</code> 里加入配置信息</li></ol><pre><code># 热部署生效spring.devtools.restart.enabled=true# 设置重启目录spring.devtools.restart.additional-paths=src/main/java</code></pre><ol start="3" type="1"><li>设置 -&gt; 构建、执行、部署 -&gt; 编译器 -&gt; 自动构建项目</li><li>设置 -&gt; 高级设置 -&gt;即使开发的应用程序当前正在运行，也允许自动make启动</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="热部署" scheme="https://ethanh3514.github.io/tags/%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>杂记 - 一些混乱的意象</title>
    <link href="https://ethanh3514.github.io/2024/04/10/%E6%9D%82%E8%AE%B0-%E4%B8%80%E4%BA%9B%E6%B7%B7%E4%B9%B1%E7%9A%84%E6%84%8F%E8%B1%A1/"/>
    <id>https://ethanh3514.github.io/2024/04/10/%E6%9D%82%E8%AE%B0-%E4%B8%80%E4%BA%9B%E6%B7%B7%E4%B9%B1%E7%9A%84%E6%84%8F%E8%B1%A1/</id>
    <published>2024-04-10T07:12:25.000Z</published>
    <updated>2024-04-10T07:31:57.619Z</updated>
    
    <content type="html"><![CDATA[<p>晚风，不再温柔</p><span id="more"></span><p>4.7</p><p>陌生的城市，陌生的街头，昏暗的夜色，星星点点的灯，潇潇的暮雨，微凉的风。熟悉的人，都已消散在时间的河流中。</p><p>无边的旷野，沙沙的蝉鸣，滴滴答答的时间，从不停留。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;晚风，不再温柔&lt;/p&gt;</summary>
    
    
    
    
    <category term="杂记" scheme="https://ethanh3514.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
    <category term="意象" scheme="https://ethanh3514.github.io/tags/%E6%84%8F%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Spring lombok 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/08/Spring-lombok-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/08/Spring-lombok-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-08T09:29:52.000Z</published>
    <updated>2024-04-08T09:40:36.050Z</updated>
    
    <content type="html"><![CDATA[<p>又是面向注解编程，这我怎么记得住啊qaq</p><span id="more"></span><ul><li>lombok是一个java类库</li><li>可以通过在类前加注解的方式自动生成javabean类内所需的方法</li><li>需要安装一个lombok插件（idea自带）</li></ul><h3 id="方法">方法</h3><ul><li><span class="citation" data-cites="Getter">@Getter</span>/<span class="citation" data-cites="Setter">@Setter</span></li><li><span class="citation" data-cites="ToString">@ToString</span></li><li><span class="citation" data-cites="EqualsAndHashCode">@EqualsAndHashCode</span></li><li><span class="citation" data-cites="Data">@Data</span></li><li><span class="citation" data-cites="NoArgsConstructor">@NoArgsConstructor</span>：无参构造</li><li><span class="citation" data-cites="AllArgsConstructor">@AllArgsConstructor</span>：全参构造</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;又是面向注解编程，这我怎么记得住啊qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="lombok" scheme="https://ethanh3514.github.io/tags/lombok/"/>
    
  </entry>
  
  <entry>
    <title>Spring Mybatis 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/07/Spring-Mybatis-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/07/Spring-Mybatis-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-07T11:34:36.000Z</published>
    <updated>2024-04-08T14:42:20.673Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><span id="more"></span><h3 id="预编译sql语句">预编译sql语句</h3><h4 id="section">#{...}</h4><ul><li>执行时会将#{...}替换为?，自动设置参数值</li><li>参数传递都使用</li><li>可以防止sql注入</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Delete</span><span class="op">(</span><span class="st">"delete from emp where id = #{id}"</span><span class="op">)</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">delete</span><span class="op">(</span><span class="bu">Integer</span> id<span class="op">);</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="section-1">${...}</h4><ul><li>直接将参数拼接在sql语句中，会存在注入问题</li><li>如果对表名、列表进行动态设置时使用</li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Delete</span><span class="op">(</span><span class="st">"delete from emp where id = ${id}"</span><span class="op">)</span></span></code></pre></div><h3 id="插入">插入</h3><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@insert</span><span class="op">(</span><span class="st">"insert into emp(username, name, gender,image,job,entrydate,dept_id,create_time,update_time) values ('Tom','汤姆',1,'1.jpg',1,'2005-01-01',1,now(),now())"</span><span class="op">)</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">insert</span><span class="op">();</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>采用类封装，注意传的参数是类的属性，需要驼峰命名</p><div class="sourceCode" id="cb4"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@insert</span><span class="op">(</span><span class="st">"insert into emp(username, name, gender,image,job,entrydate,dept_id,create_time,update_time) values (#{username},#{name},#{gender},#{image},#{job},#{entrydate},#{deptID},#{createTime},#{updateTime}"</span><span class="op">)</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">insert</span><span class="op">(</span>Emp emp<span class="op">);</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>获取主键</p><p>会自动将生成的主键值，赋值给emp对象的id属性</p><div class="sourceCode" id="cb5"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Options</span><span class="op">(</span>keyProperty<span class="op">=</span><span class="st">"id"</span><span class="op">,</span>useGeneratedKeys<span class="op">=</span><span class="kw">true</span><span class="op">)</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="at">@insert</span><span class="op">(</span><span class="st">"insert into emp(username, name, gender,image,job,entrydate,dept_id,create_time,update_time) values (#{username},#{name},#{gender},#{image},#{job},#{entrydate},#{deptID},#{createTime},#{updateTime}"</span><span class="op">)</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">void</span> <span class="fu">insert</span><span class="op">(</span>Emp emp<span class="op">);</span></span></code></pre></div><h3 id="更新">更新</h3><div class="sourceCode" id="cb6"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Update</span><span class="op">(</span><span class="st">"update emp set username = #{username}, name = #{name}, gender = #{gender}, image = #{image}, job = #{job}, entrydate = #{entrydate}, dept_id = #{deptId}, update_time = #{updateTime} where id = #{id}"</span><span class="op">)</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">void</span> <span class="fu">update</span><span class="op">(</span>Emp emp<span class="op">);</span></span></code></pre></div><h3 id="查询">查询</h3><h4 id="通过主键">通过主键</h4><ul><li>给变量取别名，将下划线命名法映射为驼峰命名</li></ul><div class="sourceCode" id="cb7"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select id, username, password, name, gender, image, job, entrydate, dept_id deptId, create_time createTime, update_time updateTime, from emp where id = #{id}"</span><span class="op">)</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> Emp <span class="fu">getById</span><span class="op">(</span><span class="bu">Integer</span> id<span class="op">);</span></span></code></pre></div><ul><li>通过@Results, <span class="citation" data-cites="Result注解手动映射封装">@Result注解手动映射封装</span></li></ul><div class="sourceCode" id="cb8"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Results</span><span class="op">({</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Result</span><span class="op">(</span>column <span class="op">=</span> <span class="st">"dept_id"</span><span class="op">,</span> property <span class="op">=</span> <span class="st">"deptId"</span><span class="op">),</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Result</span><span class="op">(</span>column <span class="op">=</span> <span class="st">"create_time"</span><span class="op">,</span> property <span class="op">=</span> <span class="st">"createTime"</span><span class="op">),</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Result</span><span class="op">(</span>column <span class="op">=</span> <span class="st">"update_time"</span><span class="op">,</span> property <span class="op">=</span> <span class="st">"updateTime"</span><span class="op">)</span></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="op">})</span></span><span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select * from emp where id = #{id}"</span><span class="op">)</span></span><span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> Emp <span class="fu">getById</span><span class="op">(</span><span class="bu">Integer</span> id<span class="op">);</span></span></code></pre></div><ul><li>开启mybatis的驼峰命名自动映射开关， a_column -&gt; aColumn</li></ul><div class="sourceCode" id="cb9"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="co">//在application.properties中</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>mybatis<span class="op">.</span><span class="fu">configuration</span><span class="op">.</span><span class="fu">map</span><span class="op">-</span>underscore<span class="op">-</span>to<span class="op">-</span>camel<span class="op">-</span><span class="cf">case</span><span class="op">=</span><span class="kw">true</span></span></code></pre></div><h4 id="条件查询">条件查询</h4><ul><li>name作模糊匹配需要用$而不是#</li><li>会有注入问题</li></ul><div class="sourceCode" id="cb10"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select * from emp where name like '%${name}%' and gender = #{gender} and entrydate between #{begin} and #{end} order by update_time desc"</span><span class="op">)</span></span><span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">List</span><span class="op">&lt;</span>Emp<span class="op">&gt;</span> <span class="fu">list</span><span class="op">(</span><span class="bu">String</span> name<span class="op">,</span> <span class="bu">Short</span> gender<span class="op">,</span> LocalDate begin<span class="op">,</span> LocalDate end<span class="op">);</span></span></code></pre></div><ul><li>可以使用concat函数解决</li></ul><div class="sourceCode" id="cb11"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select * from emp where name like concat('%',#{name},'%') and gender = #{gender} and entrydate between #{begin} and #{end} order by update_time desc"</span><span class="op">)</span></span><span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">List</span><span class="op">&lt;</span>Emp<span class="op">&gt;</span> <span class="fu">list</span><span class="op">(</span><span class="bu">String</span> name<span class="op">,</span> <span class="bu">Short</span> gender<span class="op">,</span> LocalDate begin<span class="op">,</span> LocalDate end<span class="op">);</span></span></code></pre></div><h3 id="xml映射文件">XML映射文件</h3><ul><li>XML文件的名称与Mapper接口名称一致，并且将XML映射文件和Mapper接口放置在相同包下（同包同名）<ul><li>XML文件在resources文件夹下面，和Mapper接口的路径相仿</li></ul></li><li>XML文件的namespace属性为Mapper接口全限定名一致</li><li>XML文件中sql语句的id与Mapper接口中的方法名一致，并保持返回类型一致</li></ul><p>Mapper接口：</p><div class="sourceCode" id="cb12"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">List</span><span class="op">&lt;</span>Emp<span class="op">&gt;</span> <span class="fu">list</span><span class="op">(</span><span class="bu">String</span> name<span class="op">,</span> <span class="bu">Short</span> gender<span class="op">,</span> LocalDate begin<span class="op">,</span> LocalDate end<span class="op">);</span></span><span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>XML映射文件：</p><div class="sourceCode" id="cb13"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">mapper</span><span class="ot"> namespace=</span><span class="st">"com.itheima.mapper.EmpMapper"</span>&gt;</span><span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">select</span><span class="ot"> id=</span><span class="st">"list"</span><span class="ot"> resultType=</span><span class="st">"com.itheima.pojo.Emp"</span>&gt;</span><span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a>        select * from where name like concat('%', #{name}, '%') and gender=#{gender} and entrydate between #{begin} and #{end} order by update_time desc</span><span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a>    &lt;/<span class="kw">select</span>&gt;</span><span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">mapper</span>&gt;</span></code></pre></div><h2 id="动态sql">动态sql</h2><ul><li><code>&lt;if&gt;</code> 用于判断条件是否成立</li><li>如果条件为true，则拼接sql</li><li><code>&lt;if test="name != null"&gt;...&lt;/if&gt;</code></li><li><code>&lt;where&gt;</code> 用于动态生成where关键字</li><li>如果里面条件都不成立就不生成</li><li>可以自动处理里面条件里多余的 <code>and</code></li><li><code>&lt;set&gt;</code>动态地在行首插入set关键字，删掉额外的逗号</li></ul><div class="sourceCode" id="cb14"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb14-1"><a href="#cb14-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">select</span><span class="ot"> id=</span><span class="st">"list"</span><span class="ot"> resultType=</span><span class="st">"com.itheima.pojo.Emp"</span>&gt;</span><span id="cb14-2"><a href="#cb14-2" aria-hidden="true" tabindex="-1"></a>    select *</span><span id="cb14-3"><a href="#cb14-3" aria-hidden="true" tabindex="-1"></a>    from emp</span><span id="cb14-4"><a href="#cb14-4" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">where</span>&gt;</span><span id="cb14-5"><a href="#cb14-5" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">if</span><span class="ot"> test=</span><span class="st">"name != null"</span>&gt;</span><span id="cb14-6"><a href="#cb14-6" aria-hidden="true" tabindex="-1"></a>            name like concat('%', #{name}, '%')</span><span id="cb14-7"><a href="#cb14-7" aria-hidden="true" tabindex="-1"></a>        &lt;/<span class="kw">if</span>&gt;</span><span id="cb14-8"><a href="#cb14-8" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">if</span><span class="ot"> test=</span><span class="st">"gender != null"</span>&gt;</span><span id="cb14-9"><a href="#cb14-9" aria-hidden="true" tabindex="-1"></a>            and gender = #{gender}</span><span id="cb14-10"><a href="#cb14-10" aria-hidden="true" tabindex="-1"></a>        &lt;/<span class="kw">if</span>&gt;</span><span id="cb14-11"><a href="#cb14-11" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">if</span><span class="ot"> test=</span><span class="st">"begin != null and end != null"</span>&gt;</span><span id="cb14-12"><a href="#cb14-12" aria-hidden="true" tabindex="-1"></a>            and entrydate between #{begin} and #{end}</span><span id="cb14-13"><a href="#cb14-13" aria-hidden="true" tabindex="-1"></a>        &lt;/<span class="kw">if</span>&gt;</span><span id="cb14-14"><a href="#cb14-14" aria-hidden="true" tabindex="-1"></a>    &lt;/<span class="kw">where</span>&gt;</span><span id="cb14-15"><a href="#cb14-15" aria-hidden="true" tabindex="-1"></a>    order by update_time desc</span><span id="cb14-16"><a href="#cb14-16" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">select</span>&gt;</span></code></pre></div><h3 id="foreach遍历">foreach遍历</h3><ul><li>collection：遍历的集合</li><li>item：遍历出来的元素</li><li>separator：分隔符</li><li>open：遍历开始前拼接的sql片段</li><li>close：遍历结束后拼接的sql片段</li></ul><p>SQL语句：</p><div class="sourceCode" id="cb15"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="kw">delete</span> <span class="kw">from</span> emp <span class="kw">where</span> <span class="kw">id</span> <span class="kw">in</span> (<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>);</span></code></pre></div><p>接口方法：</p><div class="sourceCode" id="cb16"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a><span class="co">//批量删除</span></span><span id="cb16-2"><a href="#cb16-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">void</span> <span class="fu">deleteByIds</span><span class="op">(</span><span class="bu">List</span><span class="op">&lt;</span><span class="bu">Integer</span><span class="op">&gt;</span> ids<span class="op">);</span></span></code></pre></div><p>XML映射文件</p><div class="sourceCode" id="cb17"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb17-1"><a href="#cb17-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">delete</span><span class="ot"> id=</span><span class="st">"deleteByIds"</span>&gt;</span><span id="cb17-2"><a href="#cb17-2" aria-hidden="true" tabindex="-1"></a>    delete from emp where id in</span><span id="cb17-3"><a href="#cb17-3" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">foreach</span><span class="ot"> collection=</span><span class="st">"ids"</span><span class="ot"> item=</span><span class="st">"id"</span><span class="ot"> separator=</span><span class="st">","</span><span class="ot"> open=</span><span class="st">"("</span><span class="ot"> close=</span><span class="st">")"</span>&gt;</span><span id="cb17-4"><a href="#cb17-4" aria-hidden="true" tabindex="-1"></a>        #{id}</span><span id="cb17-5"><a href="#cb17-5" aria-hidden="true" tabindex="-1"></a>    &lt;/<span class="kw">foreach</span>&gt;</span><span id="cb17-6"><a href="#cb17-6" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">delete</span>&gt;</span></code></pre></div><h3 id="sql标签">sql标签</h3><div class="sourceCode" id="cb18"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb18-1"><a href="#cb18-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">sql</span><span class="ot"> id=</span><span class="st">"01"</span>&gt;</span><span id="cb18-2"><a href="#cb18-2" aria-hidden="true" tabindex="-1"></a>    ...<span class="co">&lt;!-- sql语句 --&gt;</span></span><span id="cb18-3"><a href="#cb18-3" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">sql</span>&gt;</span><span id="cb18-4"><a href="#cb18-4" aria-hidden="true" tabindex="-1"></a>...</span><span id="cb18-5"><a href="#cb18-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb18-6"><a href="#cb18-6" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">include</span><span class="ot"> refid=</span><span class="st">"01"</span>/&gt;<span class="co">&lt;!-- 语句引用 --&gt;</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="Mybatis" scheme="https://ethanh3514.github.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Spring 分层解耦 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/06/Spring-%E5%88%86%E5%B1%82%E8%A7%A3%E8%80%A6-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/06/Spring-%E5%88%86%E5%B1%82%E8%A7%A3%E8%80%A6-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-06T13:50:29.000Z</published>
    <updated>2024-04-07T07:44:09.167Z</updated>
    
    <content type="html"><![CDATA[<p>qaq 面向注解编程真难学</p><span id="more"></span><h3 id="三层架构">三层架构</h3><ul><li><strong>Controller</strong>：控制层。接收请求，响应数据</li><li><strong>Service</strong>：业务逻辑层。处理具体的业务逻辑</li><li><strong>Dao</strong>：数据访问层（Data AccessObject)（持久层），负责数据访问操作</li></ul><h3 id="分层解耦">分层解耦</h3><ul><li>控制反转（IOC）（Inversion OfControl）：对象的创建控制权由程序自身转移到外部（容器）</li><li>依赖注入（DI）（DependencyInjection）：容器为应用程序提供运行时所依赖的资源</li><li>Bean对象：IOC容器中创建、管理的对象</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Component</span><span class="co">//将当前类交给IOC容器管理，成为IOC容器中的bean</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> EmpServiceA <span class="kw">implements</span> EmpService <span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span><span class="co">//运行时，IOC容器会提供这个类型的bean对象，并赋值 - 依赖注入</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> EmpDao empDao<span class="op">;</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">...</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="bean的声明">Bean的声明</h4><ul><li><code>@Component</code>：不属于下面三类的时候用</li><li><code>@Controller</code>：标注在控制器类上</li><li><code>@Service</code>：标在业务类上</li><li><code>@Repository</code>：标在数据访问类上</li></ul><p>注意：</p><ul><li>声明bean的时候，可以通过value属性指定bean的名字，没指定的话默认为<strong>类名首字母小写</strong></li><li>springboot集成web开发的时候，声明控制类bean只能用@Controller</li></ul><h4 id="组件扫描">组件扫描</h4><ul><li><p>声明的注解，需要被组件扫描注解@ComponentScan扫描才会生效</p></li><li><p><span class="citation" data-cites="ComponentScan注解没有显示配置">@ComponentScan注解没有显示配置</span>，实际上已经包含在启动类声明注解@SpringBootApplication，默认扫描范围是启动类所在包及其子包</p></li><li><p>可以自行声明注解@ComponentScan来管理扫描路径（不推荐）</p><ul><li>在启动类前加<code>@ComponentScan({"dao","com.hxy"})</code></li><li>因为会把默认的取代，所以需要加上原来的包</li></ul></li></ul><h3 id="bean注入">Bean注入</h3><ul><li><p><span class="citation" data-cites="Autowired默认按照类型注入">@Autowired默认按照类型注入</span>，若存在多个相同类型的bean，会报错</p></li><li><p>解决</p><ul><li><p><span class="citation" data-cites="Primary">@Primary</span>加在想要生效的类前</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Primary</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="at">@Service</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> EmpServiceA <span class="kw">implements</span> EmpService <span class="op">{</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="co">//...</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li><li><p><span class="citation" data-cites="Qualifier">@Qualifier</span>加在@Autowired前，<strong>类名首字母小写</strong></p><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Autowired</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="at">@Qualifier</span><span class="op">(</span><span class="st">"empServiceA"</span><span class="op">)</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> EmpService empService<span class="op">;</span></span></code></pre></div></li><li><p><span class="citation" data-cites="Resource">@Resource</span>加载要注入的位置，替换@Autowired ，按照名称注入</p><div class="sourceCode" id="cb4"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Resource</span><span class="op">(</span>name <span class="op">=</span> <span class="st">"empServiceB"</span><span class="op">)</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> EmpService empService<span class="op">;</span></span></code></pre></div></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq 面向注解编程真难学&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="分层解耦" scheme="https://ethanh3514.github.io/tags/%E5%88%86%E5%B1%82%E8%A7%A3%E8%80%A6/"/>
    
  </entry>
  
  <entry>
    <title>Spring 请求响应 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/06/Spring-%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/06/Spring-%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-06T13:03:27.000Z</published>
    <updated>2024-04-06T13:27:16.823Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><p>极简地记一下</p><span id="more"></span><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">package</span><span class="im"> com</span><span class="op">.</span><span class="im">hxy</span><span class="op">.</span><span class="im">controller</span><span class="op">;</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">com</span><span class="op">.</span><span class="im">hxy</span><span class="op">.</span><span class="im">pojo</span><span class="op">.</span><span class="im">User</span><span class="op">;</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">org</span><span class="op">.</span><span class="im">springframework</span><span class="op">.</span><span class="im">format</span><span class="op">.</span><span class="im">annotation</span><span class="op">.</span><span class="im">DateTimeFormat</span><span class="op">;</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">org</span><span class="op">.</span><span class="im">springframework</span><span class="op">.</span><span class="im">web</span><span class="op">.</span><span class="im">bind</span><span class="op">.</span><span class="im">annotation</span><span class="op">.*;</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">javax</span><span class="op">.</span><span class="im">servlet</span><span class="op">.</span><span class="im">http</span><span class="op">.</span><span class="im">HttpServletRequest</span><span class="op">;</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">java</span><span class="op">.</span><span class="im">time</span><span class="op">.</span><span class="im">LocalDateTime</span><span class="op">;</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">java</span><span class="op">.</span><span class="im">util</span><span class="op">.</span><span class="im">Arrays</span><span class="op">;</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">java</span><span class="op">.</span><span class="im">util</span><span class="op">.</span><span class="im">List</span><span class="op">;</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="at">@RestController</span></span><span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> RequestController <span class="op">{</span></span><span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a><span class="co">//    @RequestMapping("/hello")</span></span><span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="co">//    public String hello(HttpServletRequest request) {</span></span><span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a><span class="co">//        String name = request.getParameter("name");</span></span><span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a><span class="co">//        String ageStr = request.getParameter("age");</span></span><span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a><span class="co">//</span></span><span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a><span class="co">//        int age = Integer.parseInt(ageStr);</span></span><span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a><span class="co">//        System.out.println(name + ": " + age);</span></span><span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a><span class="co">//</span></span><span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a><span class="co">//        return "OK";</span></span><span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a><span class="co">//    }</span></span><span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="co">//required指明参数是否必须</span></span><span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>    <span class="co">//RequestParam可以将名称手动映射</span></span><span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/hello"</span><span class="op">)</span></span><span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">hello</span><span class="op">(</span><span class="at">@RequestParam</span><span class="op">(</span>name <span class="op">=</span> <span class="st">"name"</span><span class="op">,</span> required <span class="op">=</span> <span class="kw">false</span><span class="op">)</span> <span class="bu">String</span> username<span class="op">,</span> <span class="bu">Integer</span> age<span class="op">)</span> <span class="op">{</span></span><span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>username <span class="op">+</span> <span class="st">": "</span> <span class="op">+</span> age<span class="op">);</span></span><span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>    <span class="co">//需要和实体对象的属性名一致</span></span><span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/simplePojo"</span><span class="op">)</span></span><span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">simplePojo</span><span class="op">(</span>User user<span class="op">)</span> <span class="op">{</span></span><span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>    <span class="co">//数组参数：需要请求参数名和形参中数组变量名相同</span></span><span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/arrayParam"</span><span class="op">)</span></span><span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">arrayParam</span><span class="op">(</span><span class="bu">String</span><span class="op">[]</span> hobby<span class="op">)</span> <span class="op">{</span></span><span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="bu">Arrays</span><span class="op">.</span><span class="fu">toString</span><span class="op">(</span>hobby<span class="op">));</span></span><span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>    <span class="co">//集合参数：需要请求参数名与形参中集合变量名相同，并且通过@RequestParam绑定参数关系</span></span><span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/listParam"</span><span class="op">)</span></span><span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">arrayParam</span><span class="op">(</span><span class="at">@RequestParam</span> <span class="bu">List</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> hobby<span class="op">)</span> <span class="op">{</span></span><span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>hobby<span class="op">);</span></span><span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>    <span class="co">//日期参数</span></span><span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/dateParam"</span><span class="op">)</span></span><span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">dateParam</span><span class="op">(</span><span class="at">@DateTimeFormat</span><span class="op">(</span>pattern <span class="op">=</span> <span class="st">"yyyy-MM-dd HH:mm:ss"</span><span class="op">)</span>LocalDateTime updateTime<span class="op">)</span> <span class="op">{</span></span><span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>updateTime<span class="op">);</span></span><span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>    <span class="co">//键名需要和对象中属性值一致</span></span><span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/jsonParam"</span><span class="op">)</span></span><span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">jsonParam</span><span class="op">(</span><span class="at">@RequestBody</span> User user<span class="op">)</span> <span class="op">{</span></span><span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/path/{id}"</span><span class="op">)</span></span><span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">pathParam</span><span class="op">(</span><span class="at">@PathVariable</span> <span class="bu">Integer</span> id<span class="op">)</span> <span class="op">{</span></span><span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>id<span class="op">);</span></span><span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-77"><a href="#cb1-77" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-78"><a href="#cb1-78" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/path/{id}/{name}"</span><span class="op">)</span></span><span id="cb1-79"><a href="#cb1-79" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">pathParam2</span><span class="op">(</span><span class="at">@PathVariable</span> <span class="bu">Integer</span> id<span class="op">,</span> <span class="at">@PathVariable</span> <span class="bu">String</span> name<span class="op">)</span> <span class="op">{</span></span><span id="cb1-80"><a href="#cb1-80" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>id <span class="op">+</span> <span class="st">": "</span> <span class="op">+</span> name<span class="op">);</span></span><span id="cb1-81"><a href="#cb1-81" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-82"><a href="#cb1-82" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-83"><a href="#cb1-83" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="responsebody">ResponseBody</h4><ul><li>作用在方法上或类上</li><li>可以将方法返回值直接响应，如果返回值类型是<strong>实体对象/集合</strong>，将会转换为JSON格式响应</li><li><span class="citation" data-cites="RestController">@RestController</span> = <span class="citation" data-cites="Controller">@Controller</span> + <span class="citation" data-cites="ResponseBody">@ResponseBody</span></li></ul><h4 id="统一响应格式">统一响应格式</h4><ul><li><p>将各式各样的返回值统一</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> <span class="bu">Result</span> <span class="op">{</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">//响应码，1表示成功，0表示失败</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="bu">Integer</span> code<span class="op">;</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="co">//提示信息</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="bu">String</span> msg<span class="op">;</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="co">//返回的数据</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="bu">Object</span> data<span class="op">;</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="co">//...</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="co">//...</span></span><span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">static</span> <span class="bu">Result</span> <span class="fu">success</span><span class="op">(</span><span class="bu">Object</span> data<span class="op">)</span> <span class="op">{</span></span><span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Result</span><span class="op">(</span><span class="dv">1</span><span class="op">,</span> <span class="st">"success"</span><span class="op">,</span> data<span class="op">);</span></span><span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">static</span> <span class="bu">Result</span> <span class="fu">success</span><span class="op">()</span> <span class="op">{</span></span><span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Result</span><span class="op">(</span><span class="dv">1</span><span class="op">,</span> <span class="st">"success"</span><span class="op">,</span> <span class="kw">null</span><span class="op">);</span></span><span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">static</span> <span class="bu">Result</span> <span class="fu">error</span><span class="op">(</span><span class="bu">String</span> msg<span class="op">)</span> <span class="op">{</span></span><span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Result</span><span class="op">(</span><span class="dv">0</span><span class="op">,</span> msg<span class="op">,</span> <span class="kw">null</span><span class="op">);</span></span><span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;
&lt;p&gt;极简地记一下&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Web" scheme="https://ethanh3514.github.io/tags/Web/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="请求响应" scheme="https://ethanh3514.github.io/tags/%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>HTTP协议 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/06/HTTP%E5%8D%8F%E8%AE%AE-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/06/HTTP%E5%8D%8F%E8%AE%AE-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-06T09:56:36.000Z</published>
    <updated>2024-04-06T10:10:54.228Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><span id="more"></span><h3 id="http请求协议">http请求协议</h3><ul><li>请求行：<code>GET /path?key=value&amp;key=value HTTP/1.1</code>（请求方式、资源路径、协议）</li><li>请求头：第二行开始 <code>key=value</code></li><li>请求体：请求头空一行后接</li></ul><h4 id="get-和-post方法">GET 和 POST方法</h4><ul><li>GET方法的请求参数在请求行中，没有请求体。大小有限制<ul><li>以<code>?key=value&amp;key=value</code>的格式</li></ul></li><li>POST方法的请求参数在请求体中，POST请求大小无限制</li></ul><h3 id="http响应协议">http响应协议</h3><ul><li>响应行：<code>HTTP/1.1 200 OK</code>响应数据第一行（协议、状态码、描述）</li><li>响应头：第二行开始 <code>key=value</code></li><li>响应体：最后一部分，存放响应数据（json格式）</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="HTTP" scheme="https://ethanh3514.github.io/tags/HTTP/"/>
    
    <category term="Web" scheme="https://ethanh3514.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>超星平台无法粘贴 解决方案</title>
    <link href="https://ethanh3514.github.io/2024/04/04/%E8%B6%85%E6%98%9F%E5%B9%B3%E5%8F%B0%E6%97%A0%E6%B3%95%E7%B2%98%E8%B4%B4-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://ethanh3514.github.io/2024/04/04/%E8%B6%85%E6%98%9F%E5%B9%B3%E5%8F%B0%E6%97%A0%E6%B3%95%E7%B2%98%E8%B4%B4-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2024-04-04T07:23:51.000Z</published>
    <updated>2024-04-04T07:27:22.645Z</updated>
    
    <content type="html"><![CDATA[<p>老师的要求是提交代码，但是不能用附件，又不能粘贴，总不能再敲一遍。</p><span id="more"></span><p>当粘贴的时候，会出现一个弹窗提示禁止粘贴，这个弹窗和相应的逻辑肯定是JS里面的，所以把JS禁用了就没事了。</p><p>F12 -&gt; F1 -&gt; Debugger -&gt; Disable JavaScript</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;老师的要求是提交代码，但是不能用附件，又不能粘贴，总不能再敲一遍。&lt;/p&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="https://ethanh3514.github.io/tags/JavaScript/"/>
    
    <category term="攻略" scheme="https://ethanh3514.github.io/tags/%E6%94%BB%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>杂记 - 数学是永远的温柔乡</title>
    <link href="https://ethanh3514.github.io/2024/04/04/%E6%9D%82%E8%AE%B0-%E6%95%B0%E5%AD%A6%E6%98%AF%E6%B0%B8%E8%BF%9C%E7%9A%84%E6%B8%A9%E6%9F%94%E4%B9%A1/"/>
    <id>https://ethanh3514.github.io/2024/04/04/%E6%9D%82%E8%AE%B0-%E6%95%B0%E5%AD%A6%E6%98%AF%E6%B0%B8%E8%BF%9C%E7%9A%84%E6%B8%A9%E6%9F%94%E4%B9%A1/</id>
    <published>2024-04-03T16:39:30.000Z</published>
    <updated>2024-04-03T17:06:06.508Z</updated>
    
    <content type="html"><![CDATA[<p>深夜朋友发来一道数学题，在做题的过程中找到了久违的感觉</p><span id="more"></span><p>或许是高中两年竞赛生涯的培养，无论我的状态多差，只要碰到数学题都可以立刻高度集中精神，马上回到最佳状态。一道好的题可以给我一场纯粹思维洗礼，这是在绝大部分娱乐活动中无法获得的。</p><p>也许这也是我大学前两年一直想去数学系的原因。</p><p>最终没去的理由也很简单，因为我看清了自己。而且为了断绝这份念想，之后也很少再碰数学。</p><p>也许可以算是遗憾</p><hr><p><strong>附题目</strong>：</p><p>设 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.299ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1900 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 在 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.811ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4778.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(389,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1167,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g><g data-mml-node="mo" transform="translate(2167,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(2611.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3389.7,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g><g data-mml-node="mo" transform="translate(4389.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 上连续可导，且</p><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.2ex;" xmlns="http://www.w3.org/2000/svg" width="21.477ex" height="4.468ex" role="img" focusable="false" viewBox="0 -1002.7 9493 1974.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(394,0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(950,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(46.6,-844) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1239,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(1672.7,0)"><g data-mml-node="mo"><svg width="278" height="1505.4" y="-502.7" x="27.5" viewBox="0 -186.5 278 1505.4"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1,2.26)"></path></svg></g><g data-mml-node="msup" transform="translate(333,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(499,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(778,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="msup" transform="translate(2145.3,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3025.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3414.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3986.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4375.7,0)"><svg width="278" height="1505.4" y="-502.7" x="27.5" viewBox="0 -186.5 278 1505.4"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1,2.26)"></path></svg></g></g><g data-mml-node="mo" transform="translate(6659.2,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mo" transform="translate(7715,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(8493,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g></svg></mjx-container></span> ，</p><p>证明： <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.024ex;" xmlns="http://www.w3.org/2000/svg" width="25.408ex" height="3.18ex" role="img" focusable="false" viewBox="0 -952.7 11230.3 1405.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="munder"><g data-mml-node="mo"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="75" d="M383 58Q327 -10 256 -10H249Q124 -10 105 89Q104 96 103 226Q102 335 102 348T96 369Q86 385 36 385H25V408Q25 431 27 431L38 432Q48 433 67 434T105 436Q122 437 142 438T172 441T184 442H187V261Q188 77 190 64Q193 49 204 40Q224 26 264 26Q290 26 311 35T343 58T363 90T375 120T379 144Q379 145 379 161T380 201T380 248V315Q380 361 370 372T320 385H302V431Q304 431 378 436T457 442H464V264Q464 84 465 81Q468 61 479 55T524 46H542V0Q540 0 467 -5T390 -11H383V58Z" transform="translate(394,0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(950,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1539,-229.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1239,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(3168.5,0)"><g data-mml-node="mo"><svg width="278" height="1405.4" y="-452.7" x="27.5" viewBox="0 -174.1 278 1405.4"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1,2.11)"></path></svg></g><g data-mml-node="mi" transform="translate(333,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(905,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="TeXAtom" transform="translate(499,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(778,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mi" transform="translate(2717.3,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3267.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3656.3,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(4228.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4617.3,0)"><svg width="278" height="1405.4" y="-452.7" x="27.5" viewBox="0 -174.1 278 1405.4"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1,2.11)"></path></svg></g></g><g data-mml-node="mo" transform="translate(8396.5,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mo" transform="translate(9452.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(10230.3,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g></svg></mjx-container></span> .（北京大学）.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;深夜朋友发来一道数学题，在做题的过程中找到了久违的感觉&lt;/p&gt;</summary>
    
    
    
    
    <category term="数学" scheme="https://ethanh3514.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="杂记" scheme="https://ethanh3514.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>JS DOM对象 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/03/25/JS-DOM%E5%AF%B9%E8%B1%A1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/03/25/JS-DOM%E5%AF%B9%E8%B1%A1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-25T05:28:34.000Z</published>
    <updated>2024-03-25T05:31:54.653Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><span id="more"></span><ul><li>Document Object Model</li><li>文档对象模型</li><li>将标记语言的各个组成部分封装为对应的对象<ul><li>Document：整个文档对象</li><li>Element：元素对象</li><li>Attribute：属性对象</li><li>Text：文本对象</li><li>Comment：注释对象</li></ul></li><li>JS通过操纵DOM，可以对HTML进行操作</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JavaScript" scheme="https://ethanh3514.github.io/tags/JavaScript/"/>
    
    <category term="DOM" scheme="https://ethanh3514.github.io/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>JS BOM对象 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/03/25/JS-BOM%E5%AF%B9%E8%B1%A1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/03/25/JS-BOM%E5%AF%B9%E8%B1%A1-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-25T05:22:58.000Z</published>
    <updated>2024-03-25T05:27:59.694Z</updated>
    
    <content type="html"><![CDATA[<p>学就完了！</p><span id="more"></span><h3 id="window">Window</h3><ul><li>浏览器窗口对象</li><li>获取：直接使用window（可省略）<ul><li><code>window.alert("Hello window");</code></li><li><code>alert("Hello window");</code></li></ul></li><li>属性<ul><li><code>history</code>：对History对象的只读引用</li><li><code>location</code>：用于窗口或框架的Location对象</li><li><code>navigator</code>：对Navigator对象的只读引用</li></ul></li><li>方法<ul><li><code>alert()</code>：显示带有一段消息和一个确认按钮的警告框</li><li><code>confirm()</code>：显示带有一段消息和确认取消按钮的对话框</li><li><code>setInterval()</code>：按照指定的周期（毫秒）来调用函数或计算表达式</li><li><code>setTimeout()</code>：在指定的毫秒数后调用函数或计算表达式</li></ul></li></ul><h4 id="location">Location</h4><ul><li>地址栏对象</li><li>获取：使用window.location获取<ul><li><code>window.location.属性</code></li><li><code>location.属性</code></li></ul></li><li>属性：<ul><li><code>href</code>：设置或返回完整的url</li><li><code>location.href = "baidu.com"</code>：可以用来跳转</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;学就完了！&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JavaScript" scheme="https://ethanh3514.github.io/tags/JavaScript/"/>
    
    <category term="BOM" scheme="https://ethanh3514.github.io/tags/BOM/"/>
    
  </entry>
  
  <entry>
    <title>SQL 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/03/23/SQL-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/03/23/SQL-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-23T11:25:51.000Z</published>
    <updated>2024-04-05T15:36:56.178Z</updated>
    
    <content type="html"><![CDATA[<p>记一些不好记的</p><span id="more"></span><h2 id="sql分类">SQL分类</h2><ul><li>DDL：数据定义语言</li><li>DML：数据操作语言</li><li>DQL：数据查询语言</li><li>DCL：数据控制语言</li></ul><h2 id="事务的四大特性acid">事务的四大特性（ACID）</h2><ul><li>原子性（Atomicity）：事务是不可分割的最小操作单元</li><li>一致性（Consistency）：事务完成时，必须使所有数据保持一致</li><li>隔离性（Isolation）：保证事务在不受外部并发操作影响的独立环境下运行</li><li>持久性（Durability）：事务一旦提交或回滚，它对数据库中数据的改变是永久的</li></ul><h3 id="并发事务问题">并发事务问题</h3><ul><li>脏读：一个事务读到另外一个事务还没有提交的数据</li><li>不可重复读：一个事务先后读取同一条记录，但两次读取的数据不同</li><li>幻读：一个事务按照条件查询数据时，没有对应的数据行，但是在插入数据时，又发现这行数据已经存在</li></ul><h3 id="事务隔离级别">事务隔离级别</h3><ul><li>Read uncommitted：脏读、不可重复读、幻读</li><li>Read committed（Oracle默认）：不可重复读、幻读</li><li>Repeatable Read（SQL默认）：幻读</li><li>Serializable</li></ul><p>从上到下性能依次降低，隔离级别逐渐提高</p><h2 id="性能优化">性能优化</h2><h3 id="查看执行频次">查看执行频次</h3><ul><li><code>show global status like 'Com%';</code>：展示当前数据库中各个操作已经进行的次数</li></ul><h3 id="慢查询日志">慢查询日志</h3><ul><li><p>记录了所有执行时间超过指定参数（ <code>long_query_time</code>秒）的所有SQL语句</p></li><li><p>默认没有开启，需要在MySQL的配置文件（ <code>/etc/my.cnf</code>）中配置：</p><ul><li><p><code>show variables like 'slow_query_log';</code></p></li><li><div class="sourceCode" id="cb1"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>  # 开启MySQL慢查询日志开关</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  slow_query_log<span class="op">=</span><span class="dv">1</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  # 设置时间阈值为2秒</span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  long_query_time<span class="op">=</span><span class="dv">2</span></span></code></pre></div></li><li><p><code>/var/lib/mysql/localhost-slow.log</code></p></li><li><p>用 <code>tail -f localhost-slow.log</code>可以看到持续的输出</p></li></ul></li></ul><h3 id="profile详情">profile详情</h3><ul><li><code>show profiles</code>可以在做SQL优化的时候看到时间都用在哪里</li><li>通过 <code>SELECT @@have_profiling</code>可以看到当前MySQL是否支持profile操作</li><li>默认 <code>profiling</code> 是关闭的，通过<code>SET profiling=1</code> 打开、</li><li><code>show profiles;</code>显示所有语句耗时</li></ul><h3 id="explain">explain</h3><ul><li>通过在sql语句前加explain获取执行计划</li><li>explain执行计划各字段含义：<ul><li>id：select查询的序列号，表示查询中执行select子句或者是操作表的顺序（id相同，执行顺序从上到下；id不同，值越大，越先执行）</li><li>select_type：表示select的类型，常见的有simple（简单表，不使用表连接或者子查询、primary（主查询，即外层的查询）、union（union中的第二个或者后面的查询语句）、subquery（select/where之后包含了子查询）等</li><li>type：表示连接类型，性能由好到差为：NULL、system、const、eq_ref、ref、range、index、all</li><li></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;记一些不好记的&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="SQL" scheme="https://ethanh3514.github.io/tags/SQL/"/>
    
    <category term="数据库" scheme="https://ethanh3514.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Java 字符串拼接原理</title>
    <link href="https://ethanh3514.github.io/2024/03/22/Java-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E5%8E%9F%E7%90%86/"/>
    <id>https://ethanh3514.github.io/2024/03/22/Java-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E5%8E%9F%E7%90%86/</id>
    <published>2024-03-22T09:25:23.000Z</published>
    <updated>2024-03-22T09:55:02.448Z</updated>
    
    <content type="html"><![CDATA[<p>常看常新</p><span id="more"></span><h3 id="常量字符串拼接">常量字符串拼接</h3><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s <span class="op">=</span> <span class="st">"a"</span> <span class="op">+</span> <span class="st">"b"</span> <span class="op">+</span> <span class="st">"c"</span><span class="op">;</span><span class="co">//编译优化，直接就是 "abc"</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>s<span class="op">);</span></span></code></pre></div><p>会复用串池的字符串</p><h3 id="拼接有变量字符串">拼接有变量字符串</h3><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s1 <span class="op">=</span> <span class="st">"a"</span><span class="op">;</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s2 <span class="op">=</span> s1 <span class="op">+</span> <span class="st">"b"</span><span class="op">;</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s3 <span class="op">=</span> s2 <span class="op">+</span> <span class="st">"c"</span><span class="op">;</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>s3<span class="op">);</span></span></code></pre></div><h4 id="jdk8以前">JDK8以前</h4><ul><li><p>底层使用<code>StringBuilder</code>拼接</p></li><li><p>每一步拼接都会创建新的<code>StringBuilder</code>，调用<code>append</code>方法，然后调用<code>toString()</code>方法，创建一个字符串对象。</p></li><li><p>每一次拼接都创建两个对象，开销比较大</p></li></ul><h4 id="jdk8">JDK8</h4><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s1 <span class="op">=</span> <span class="st">"a"</span><span class="op">;</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s2 <span class="op">=</span> <span class="st">"b"</span><span class="op">;</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s3 <span class="op">=</span> <span class="st">"c"</span><span class="op">;</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> s4 <span class="op">=</span> s1 <span class="op">+</span> s2 <span class="op">+</span> s3<span class="op">;</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>s4<span class="op">);</span></span></code></pre></div><ul><li>先预估字符串的长度，创建字符数组，产生一个新的字符串</li><li>预估也需要时间，多次加仍然比较慢</li></ul><h3 id="结论">结论</h3><p>多次拼接手动使用<code>StringBuilder</code></p><h3 id="stringbuilder扩展底层原理">StringBuilder扩展底层原理</h3><h4 id="无参构造">无参构造</h4><ul><li>创建时默认容量16，字节数组</li><li>添加的内容小于16，直接存</li><li>添加的内容大于16，扩容到（原来容量*2+2=34）</li><li>一次加的太多，扩容之后还不够，以实际长度为准</li></ul><h4 id="有参构造">有参构造</h4><ul><li>创建时默认容量为 <code>len + 16</code></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;常看常新&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="字符串拼接" scheme="https://ethanh3514.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5/"/>
    
    <category term="String" scheme="https://ethanh3514.github.io/tags/String/"/>
    
    <category term="原理" scheme="https://ethanh3514.github.io/tags/%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Docker 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/03/21/Docker-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/03/21/Docker-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-03-21T11:01:36.000Z</published>
    <updated>2024-03-21T15:19:17.655Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><span id="more"></span><h3 id="常用命令">常用命令</h3><h4 id="docker-run">docker run</h4><pre class="shell"><code>docker run -d \    --name mysql \    -p 3306:3306 \    -e TZ=Asia/Shanghai \    -e MYSQL_ROOT_PASSWORD=123 \    mysql</code></pre><ul><li><code>docker run</code>：创建并运行一个容器，<code>-d</code>是让容器在后台运行</li><li><code>--name mysql</code>：给容器起一个名字，必须唯一</li><li><code>-p 3306:3306</code>：设置端口映射（宿主机端口：容器内端口）<ul><li>容器在宿主机运行，容器有自己的内存空间甚至IP地址，但这个IP是外部无法访问的</li><li>可以将容器的端口和宿主机的端口建立端口映射，通过访问宿主机的相应端口访问容器</li><li>容器内端口取决于进程，不需要改动</li></ul></li><li><code>-e KEY=VALUE</code>：设置环境变量<ul><li>环境变量由容器要求</li></ul></li><li><code>mysql</code>：指定运行的镜像的名字<ul><li>完整：<code>[repository]:[tag]</code></li><li>tag不写默认latest</li></ul></li></ul><h4 id="docker-images">docker images</h4><ul><li>查看本地镜像列表</li></ul><h4 id="docker-save">docker save</h4><ul><li>将镜像保存成包</li><li><code>docker save -o nginx.tar nginx:latest</code></li></ul><h4 id="docker-rmi">docker rmi</h4><ul><li>删除镜像</li><li><code>docker rmi nginx:latest</code></li></ul><h4 id="docker-load">docker load</h4><ul><li>加载镜像包</li><li><code>docker load -i nginx.tar</code></li></ul><h4 id="docker-ps">docker ps</h4><ul><li>查看当前运行容器</li><li><code>docker ps</code></li><li>只显示运行的容器<ul><li><code>docker ps -a</code></li><li>显示所有</li></ul></li></ul><h4 id="docker-stop">docker stop</h4><ul><li>停止容器</li><li><code>docker stop nginx</code></li></ul><h4 id="docker-start">docker start</h4><ul><li>启动容器</li><li><code>docker start nginx</code></li></ul><h4 id="docker-logs">docker logs</h4><ul><li>查看日志</li><li><code>docker logs nginx</code><ul><li><code>docker logs -f nginx</code></li><li><code>-f</code>：follow</li><li>一直查看日志，方便调试</li></ul></li></ul><h4 id="docker-exec">docker exec</h4><ul><li>进入容器</li><li><code>docker exec -it nginx bash</code></li></ul><h4 id="docker-rm">docker rm</h4><ul><li>删除容器</li><li><code>docker rm mysql</code></li></ul><h3 id="数据卷">数据卷</h3><ul><li>数据卷是一个虚拟目录，是容器内目录与宿主机目录之间映射的桥梁</li><li>创建数据卷会在宿主机文件系统<code>/var/lib/docker/volumes/卷名/_date</code>的位置</li><li>与容器内响应路径关联</li><li>可以使用宿主机内的编辑器修改容器内的文件内容</li><li>挂载需要再容器创建时就指定好，如果数据卷不存在会自动创建<ul><li><code>docker run -v 数据卷:数据卷目录</code></li></ul></li></ul><h4 id="常用命令-1">常用命令</h4><ul><li><code>docker volume create</code>：创建数据卷</li><li><code>docker volume ls</code>：查看所有数据卷</li><li><code>docker volume rm</code>：删除指定数据卷</li><li><code>docker volume inspect</code>：查看某个数据卷的详情</li><li><code>docker volume prune</code>：删除未使用的数据卷</li><li><code>docker inspect</code>：查看容器是否有数据卷挂载</li></ul><h4 id="匿名卷">匿名卷</h4><ul><li>容器运行自动创建的卷</li><li>不推荐使用，不方便迁移</li></ul><h4 id="自定义挂载">自定义挂载</h4><ul><li><code>docker run -v 本地目录:容器内目录</code></li><li>本地目录必须以<code>/</code>或<code>./</code>开头，否则会被认为是数据卷</li></ul><h3 id="自定义镜像">自定义镜像</h3><h4 id="结构">结构</h4><ul><li>逐层打包</li><li>可以利用已有的层</li></ul><h4 id="dockerfile">Dockerfile</h4><p>是一个文本文件，包含一个个指令，用指令来说明要执行什么操作</p><h5 id="指令">指令</h5><ul><li><code>FROM</code>：指定基础镜像<ul><li><code>FROM centos:6</code></li></ul></li><li><code>ENV</code>：设置环境变量<ul><li><code>ENV key value</code></li></ul></li><li><code>COPY</code>：拷贝本地文件到镜像的指定目录<ul><li><code>COPY ./jrell.tar.gz /tmp</code></li></ul></li><li><code>RUN</code>：执行Linux的shell命令<ul><li><code>RUN tar -zxvf /tmp/jrell.tar.gz &amp;&amp; EXPORTS path=/tmp/jrell:$path</code></li></ul></li><li><code>EXPOSE</code>：指定容器运行时监听的端口，是给镜像使用者看的<ul><li><code>EXPOSE 8080</code></li></ul></li><li><code>ENTRYPOINT</code>：镜像中应用的启动命令，容器运行时调用<ul><li><code>ENTRYPOINT java -jar xx.jar</code></li></ul></li></ul><h5 id="使用">使用</h5><ul><li>cd进目录下</li><li><code>docker build -t 镜像名 Dockerfile目录</code>：<code>docker build -t docker-demo .</code></li><li><code>.</code>是当前目录下的Dockerfile</li></ul><h3 id="容器网络互连">容器网络互连</h3><ul><li>默认情况下，所有容器都是以bridge方式连接导Docker的一个虚拟网桥上</li><li>运行Docker的时候会创建一个虚拟网卡：<code>docker0</code></li><li>同时给虚拟网卡创建一个虚拟网桥</li><li>容器通过网桥和各自的IP建立联系</li><li>但是这样分配的IP是动态的，各种情况可能会重新分配</li></ul><h4 id="自定义网络">自定义网络</h4><p>加入自定义网络的容器可以通过容器名相互访问</p><ul><li><p><code>docker network create</code></p></li><li><p><code>docker network ls</code></p></li><li><p><code>docker network rm</code></p></li><li><p><code>docker network prune</code></p></li><li><p><code>docker network connect</code></p></li><li><p><code>docker network disconnect</code></p></li><li><p><code>docker network inspect</code></p></li><li><p>可以在创建容器的时候直接加入网桥，就不会加入默认网桥了</p><ul><li><code>docker run --network</code></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Docker" scheme="https://ethanh3514.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>原码、反码、补码</title>
    <link href="https://ethanh3514.github.io/2024/03/20/%E5%8E%9F%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81/"/>
    <id>https://ethanh3514.github.io/2024/03/20/%E5%8E%9F%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81/</id>
    <published>2024-03-20T15:55:52.000Z</published>
    <updated>2024-03-20T16:12:36.372Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><span id="more"></span><h3 id="原码">原码</h3><ul><li>最左边是符号位，0为正、1为负</li><li>因为只有符号位控制符号，所以负数加正数会变小，负数减正数会变大，所以负数的运算会有问题</li></ul><h3 id="反码">反码</h3><ul><li>为了解决原码不能计算负数的问题而出现的</li><li>正数的反码不变，负数的反码在原码的基础上，符号位不变，数值取反，0变1,1变0</li><li>因为<code>-0</code>的存在，跨越<code>0</code>会有问题</li></ul><p><strong>例</strong>：</p><p>-56</p><ul><li>原码：10111000</li><li>反码：11000111</li></ul><h3 id="补码">补码</h3><ul><li>负数的补码是反码+1</li><li>正数的补码=原码=反码</li><li>一个字节可以表示范围为： -128~127</li></ul><h3 id="位运算符">位运算符</h3><ul><li><code>&lt;&lt;</code>：左移，低位补0</li><li><code>&gt;&gt;</code>：右移，高位补0或1。负数补1，正数补0</li><li><code>&gt;&gt;&gt;</code>：无符号右移，高位补0</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>JDK和JRE</title>
    <link href="https://ethanh3514.github.io/2024/03/20/JDK%E5%92%8CJRE/"/>
    <id>https://ethanh3514.github.io/2024/03/20/JDK%E5%92%8CJRE/</id>
    <published>2024-03-20T15:45:04.000Z</published>
    <updated>2024-03-20T15:49:17.095Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><h3 id="jdkjava-development-kit">JDK（Java Development kit）</h3><ul><li>Java开发工具包</li></ul><h4 id="包含">包含</h4><ul><li>JVM（Java Virtual Machine）：Java虚拟机</li><li>核心类库</li><li>开发工具<ul><li>javac 编译工具</li><li>java 运行工具</li><li>jdb 调试工具</li><li>jhat 内存分析工具</li></ul></li></ul><h3 id="jrejava-runtime-environment">JRE（Java RuntimeEnvironment）</h3><ul><li>Java运行环境</li></ul><h4 id="包含-1">包含</h4><ul><li>JVM</li><li>核心类库</li><li>运行工具</li></ul><p>JDK包含JRE包含JVM</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://ethanh3514.github.io/tags/JDK/"/>
    
    <category term="JRE" scheme="https://ethanh3514.github.io/tags/JRE/"/>
    
  </entry>
  
</feed>
