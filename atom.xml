<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hxy(慌糖盐)</title>
  
  
  <link href="https://ethanh3514.github.io/atom.xml" rel="self"/>
  
  <link href="https://ethanh3514.github.io/"/>
  <updated>2024-06-03T02:05:48.728Z</updated>
  <id>https://ethanh3514.github.io/</id>
  
  <author>
    <name>EthanH3514</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>双数组Trie树(DAT) 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/06/03/%E5%8F%8C%E6%95%B0%E7%BB%84Trie%E6%A0%91-DAT-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/06/03/%E5%8F%8C%E6%95%B0%E7%BB%84Trie%E6%A0%91-DAT-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-06-03T02:02:27.000Z</published>
    <updated>2024-06-03T02:05:48.728Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Trie树是一种利用空间换时间的数据结构，占用的内存会比较大。也正是因为这个原因，实际工程项目中都是使用的改进版Trie 树例如双数组 Trie 树（Double-Array Trie，DAT）。</p></blockquote><blockquote><p>在双数组所有键中包含的字符之间的联系都是通过简单的数学加法运算表示，不仅提高了检索速度，而且省去了链式结构中使用的大量指针，节省了存储空间。</p></blockquote><p>如果DAT与AC自动机结合，可以达到很高的多模式匹配性能</p><span id="more"></span><p><a href="https://www.hankcs.com/program/java/triedoublearraytriejava.html">[双数组Trie树(DoubleArrayTrie)Java实现](https://www.hankcs.com/program/java/triedoublearraytriejava.html)</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Trie
树是一种利用空间换时间的数据结构，占用的内存会比较大。也正是因为这个原因，实际工程项目中都是使用的改进版
Trie 树例如双数组 Trie 树（Double-Array Trie，DAT）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在双数组所有键中包含的字符之间的联系都是通过简单的数学加法运算表示，不仅提高了检索速度，而且省去了链式结构中使用的大量指针，节省了存储空间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果DAT与AC自动机结合，可以达到很高的多模式匹配性能&lt;/p&gt;</summary>
    
    
    
    
    <category term="算法" scheme="https://ethanh3514.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据结构" scheme="https://ethanh3514.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="DAT" scheme="https://ethanh3514.github.io/tags/DAT/"/>
    
    <category term="Trie" scheme="https://ethanh3514.github.io/tags/Trie/"/>
    
  </entry>
  
  <entry>
    <title>代码命名规范 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/06/02/%E4%BB%A3%E7%A0%81%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/06/02/%E4%BB%A3%E7%A0%81%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-06-02T10:16:48.000Z</published>
    <updated>2024-06-02T10:28:05.832Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>好的代码本身就是注释</p></blockquote><span id="more"></span><h3 id="基本规范">基本规范</h3><ul><li><p>类名用大驼峰（ <code>UpperCamelCase</code> ）</p></li><li><p>方法名、参数名、成员变量、局部变量用小驼峰（<code>lowerCamelCase</code> ）</p></li><li><p>项目文件夹名称用串式命名法（ <code>kebab-case</code> ）</p></li><li><p>包名统一小写（ <code>org.apach.dubbo.common.threadlocal</code>）</p></li><li><p>抽象类用Abstract开头</p><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">abstract</span> <span class="kw">class</span> AbstractClient <span class="kw">extends</span> AbstractEndpoint <span class="kw">implements</span> Client <span class="op">{</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li><li><p>异常类命名用Exception结尾</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> <span class="bu">NoSuchMethodException</span> <span class="kw">extends</span> <span class="bu">RuntimeException</span> <span class="op">{</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li><li><p>测试类用以要测试的类名开头，以Test结尾</p><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> AnnotationUtilsTest <span class="op">{</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li><li><p>POJO类中布尔类型的变量，不要加is前缀</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;好的代码本身就是注释&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="命名规范" scheme="https://ethanh3514.github.io/tags/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>CSRF 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/06/01/CSRF-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/06/01/CSRF-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-06-01T04:40:57.000Z</published>
    <updated>2024-06-01T04:53:54.300Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CSRF（Cross-Site RequestForgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站向被攻击网站发送跨站请求，利用受害者在被攻击网站的凭证，绕过用户验证</p></blockquote><span id="more"></span><h3 id="例子">例子</h3><ul><li>受害者登录 <code>a.com</code> ，保留登录凭证</li><li>攻击者引诱受害者访问 <code>b.com</code></li><li><code>b.com</code> 向 <code>a.com</code> 发送了一个请求：<code>a.com/act=xx</code> ，浏览器默携带 <code>a.com</code> 的<code>Cookie</code></li><li><code>a.com</code>接收到请求后，验证请求，确认是受害者的凭证，放行</li><li><code>a.com</code> 以受害者的名义执行了 <code>act=xx</code></li></ul><h3 id="防护策略">防护策略</h3><p><a href="https://tech.meituan.com/2018/10/11/fe-security-csrf.html">前端安全系列（二）：如何防止CSRF攻击？</a>]</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;CSRF（Cross-Site Request
Forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站向被攻击网站发送跨站请求，利用受害者在被攻击网站的凭证，绕过用户验证&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="CSRF" scheme="https://ethanh3514.github.io/tags/CSRF/"/>
    
  </entry>
  
  <entry>
    <title>RBAC 权限控制模型 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/05/31/RBAC-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E6%A8%A1%E5%9E%8B-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/05/31/RBAC-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E6%A8%A1%E5%9E%8B-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-05-31T14:30:00.000Z</published>
    <updated>2024-05-31T14:32:11.613Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>RBAC即基于角色的权限访问控制（Role Based Access Control）</p></blockquote><p>权限与角色相关联，用户通过成为包含特定角色的成员而得到这些角色的权限</p><p>是系统权限控制最常采用的访问控制模型</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;RBAC即基于角色的权限访问控制（Role Based Access Control）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;权限与角色相关联，用户通过成为包含特定角色的成员而得到这些角色的权限&lt;/p&gt;
&lt;p&gt;是系统权限控制最常采用的访</summary>
      
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="RBAC" scheme="https://ethanh3514.github.io/tags/RBAC/"/>
    
    <category term="权限控制" scheme="https://ethanh3514.github.io/tags/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Cookie 与 Session 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/05/31/Cookie-%E4%B8%8E-Session-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/05/31/Cookie-%E4%B8%8E-Session-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-05-31T14:25:39.000Z</published>
    <updated>2024-05-31T15:59:21.825Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Cookie和Session都是用来跟踪浏览器用户身份的会话方式</p></blockquote><span id="more"></span><h2 id="区别">区别</h2><h3 id="cookie">Cookie</h3><ul><li>存放在客户端</li><li>一般保存用户信息</li></ul><h3 id="session">Session</h3><ul><li>Session存放在服务端</li><li>安全性更高</li></ul><h2 id="使用session-cookie方案进行身份验证">使用Session-Cookie方案进行身份验证</h2><ul><li>用户发送登录信息</li><li>服务器验证通过，为用户创建一个 <code>Session</code> ，将<code>Session</code> 存储</li><li>服务器向用户返回 <code>SessionID</code> ，写入用户的<code>Cookie</code></li><li>用户保持登录状态时， <code>Cookie</code>将与每个后续请求一起发送</li><li>服务器将存储在 <code>Cookie</code> 上的 <code>SessionID</code>与内存中或数据库中的 <code>Session</code> 比对，验证身份</li></ul><h3 id="注意">注意</h3><ul><li>一定要确保客户端开启了 <code>Cookie</code></li><li>注意 <code>Session</code> 的过期时间</li></ul><h2 id="多服务器节点下session-cookie">多服务器节点下Session-Cookie</h2><p>可能会有用户两次访问导向到不同服务器，以至于Session失效</p><h3 id="常见解决方案">常见解决方案</h3><ul><li>通过哈希策略分配</li><li>服务器间的Session互相同步（节点越多成本越高）</li><li>使用一个所有服务器都能访问到的数据节点（缓存）存放Session</li><li>Spring Session</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Cookie和Session都是用来跟踪浏览器用户身份的会话方式&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Cookie" scheme="https://ethanh3514.github.io/tags/Cookie/"/>
    
    <category term="Session" scheme="https://ethanh3514.github.io/tags/Session/"/>
    
  </entry>
  
  <entry>
    <title>JWT 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/05/31/JWT-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/05/31/JWT-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-05-31T14:06:49.000Z</published>
    <updated>2024-06-01T05:04:41.425Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>JSON WebToken，是目前最流行的跨域认证解决方案，是一种基于Token的认证授权机制</p></blockquote><blockquote><p>JWT自身包含了身份验证所需要的所有信息，因此，服务器不需要存储Session信息</p></blockquote><blockquote><p>JWT 更符合设计RESTful API的 Stateless 原则</p></blockquote><blockquote><p>使用JWT认证可以有效避免CSRF攻击</p></blockquote><span id="more"></span><h3 id="组成">组成</h3><ul><li><p>header：</p><div class="sourceCode" id="cb1"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">{</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="dt">"alg"</span><span class="fu">:</span> <span class="st">"HS246"</span><span class="fu">,</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"typ"</span><span class="fu">:</span> <span class="st">"JWT"</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span></code></pre></div><ul><li>定义生成签名的算法</li><li>定义Token类型</li></ul></li><li><p>payload</p><div class="sourceCode" id="cb2"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">{</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"sub"</span><span class="fu">:</span> <span class="st">"1234567890"</span><span class="fu">,</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"name"</span><span class="fu">:</span> <span class="st">"Ethan"</span><span class="fu">,</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"admin"</span><span class="fu">:</span> <span class="kw">true</span><span class="fu">,</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="dt">"iat"</span><span class="fu">:</span> <span class="dv">1516239022</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span></code></pre></div><ul><li>存放实际需要传输的数据</li><li><code>iat</code> 是时间戳</li></ul></li><li><p>signature</p><pre><code>HMACSHA256(  base64UrlEncode(header) + "." +  base64UrlEncode(payload),  your-256-bit-secret)</code></pre><ul><li>服务器通过payload、header、密钥使用header中指定的签名算法生成</li></ul></li><li><p>基本格式：<code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</code></p></li></ul><h3 id="用法">用法</h3><ul><li>用户向服务器发送登录表单</li><li>校验正确，服务端返回已经签名的Token，即JWT</li><li>用户以后每一次发送请求都在Header里带上这个JWT</li><li>服务端检查JWT并从中获取用户信息</li></ul><h3 id="注意事项">注意事项</h3><ul><li>最好把JWT存在localStorage里面，防在Cookie里有CSRF风险</li><li>常见做法是把JWT放在HTTP Header的 <code>Authorization</code> 字段中（<code>Authorization: Bearer Token</code> ）</li></ul><h3 id="安全性">安全性</h3>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;JSON Web
Token，是目前最流行的跨域认证解决方案，是一种基于Token的认证授权机制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;JWT自身包含了身份验证所需要的所有信息，因此，服务器不需要存储Session信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;JWT 更符合设计RESTful API的 Stateless 原则&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;使用JWT认证可以有效避免CSRF攻击&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JWT" scheme="https://ethanh3514.github.io/tags/JWT/"/>
    
  </entry>
  
  <entry>
    <title>《非暴力沟通》 读书总结</title>
    <link href="https://ethanh3514.github.io/2024/05/29/%E3%80%8A%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A%E3%80%8B-%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/"/>
    <id>https://ethanh3514.github.io/2024/05/29/%E3%80%8A%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A%E3%80%8B-%E8%AF%BB%E4%B9%A6%E6%80%BB%E7%BB%93/</id>
    <published>2024-05-29T05:27:33.000Z</published>
    <updated>2024-05-30T06:59:45.552Z</updated>
    
    <content type="html"><![CDATA[<p>“非暴力沟通”中的暴力并不是指肢体上的暴力，语言也可以是一把刀。</p><p>在这本书中我学到了很多，我应该会经常回看这本书。</p><p>下面我记录我看书的时候所做的勾划。</p><span id="more"></span><h2 id="非暴力沟通">非暴力沟通</h2><h3 id="区分观察和评论">区分观察和评论</h3><ul><li><code>如果不把事实和意见混为一谈，我们将不再困惑</code></li><li><code>不带评论的观察是人类智力的最高形式</code></li><li><code>将观察和评论混为一谈，别人就会倾向于听到批评，并反驳我们</code></li></ul><h3 id="感受的根源">感受的根源</h3><ul><li><code>了解我们的感受和需要</code></li><li><code>用心体会他人的感受和需要</code></li><li><code>如果我们通过批评来提出主张，人们的反应常常是申辩或反击。反之，如果我们直接说出需要，其他人就较有可能做出积极的回应</code></li><li><code>如果我们不看重自己的需要，别人可能也不会</code></li><li><code>人与人相互依存，损人无法真正利己</code></li><li><code>我们无法牺牲他人来满足自己的需要</code></li><li><code>一般来说，在存在多种感受的情况下，一个人会诉说那些还没有得到倾听的感受。因此，倾听的人无须一开始就对各种感受同时作出反馈，而可以自然地从一种感受过渡到另一种</code></li></ul><h3 id="请求帮助">请求帮助</h3><ul><li><p><code>抽象的语言无助于深化自我认识</code></p></li><li><p><code>如果我们只是表达自己的感受，别人可能就不清除我们想要什么</code></p></li><li><p><code>大多数的人在没有得到期待的反馈时，会将所说的话重复一遍</code></p></li><li><p><code>对自己的认识越深刻，表达越清楚，我们就越可能得到称心的回应</code></p></li><li><p><code>请求没有得到满足时，提出请求的人如果批评和指责，那就是命令；如果想利用对方的内疚来达到目的，也是命令</code></p></li><li><p><code>我们越是将他人的不顺从看作是对我们的排斥，我们所表达的愿望就越有可能被看作是命令</code></p></li><li><p><code>如果我们愿意去体会是什么使他们无法说“是”，那么，根据我的定义，我们提出的就是请求而非命令</code></p></li><li><p><code>一旦人们相信我们看重彼此的感情，并能兼顾双方的需要，那么，他们也就会相信我们所表达的愿望是请求而非命令</code></p></li><li><pre><code>  在提出请求前，如果我们有以下的想法，那么，我们的请求已经成为了对他人的要求。  ·他应该把房间整理干净。  ·她必须照我说的去做。  ·老板应当给我提职加薪。  ·我有权要求更长的假期。</code></pre></li></ul><h3 id="用全身心倾听">用全身心倾听</h3><ul><li><code>如果一个人想要别人了解他的处境，听到的却是安慰和建议，那么，他就有可能觉得不太舒服</code></li><li><code>在安慰他人或提建议前，先看看那是否是他们想要的</code></li><li><code>倾听他人意味着，放下已有的想法和判断，一心一意地体会他人</code></li><li><code>如果我们注意的是别人的需要而非他对我们的看法，我们将发现别人并不那么可怕</code></li><li><code>在倾听他人的观察、感受、需要和请求之后，我们可以主动表达我们的理解</code></li><li><code>非暴力沟通建议我们使用疑问句来给予他人反馈。这将便于他人对我们的理解作出必要的补充</code></li><li><code>如果一个人在说话时有明显的情绪，他一般会期待得到他人的反馈</code></li><li><code>在给他人反馈时，我们的语气十分重要。一旦别人通过我们的语气意识到我们是在体会，而非下结论，他们一般就不会产生反感。</code></li><li><code>只要我们专注于他人的感受和需要，所有的批评、攻击、辱骂或嘲讽就会消失。</code></li><li><code>如果人们常常怀疑我们的诚意，那么，我们就需要好好审视自己的动机。也许，我们只是在机械地运用非暴力沟通，而忘记其目的。这时，我们就可以问自己，我们关心的是加深与人的联系，还是以“标准的”非暴力沟通方式来说话。或者，虽然我们是以非暴力沟通的方式来表达自己，我们在乎的也许只是改变他人来迎合我们的需要。</code></li><li><code>给他人反馈是在节约而非浪费时间</code></li><li><code>在解决问题或询问他人的请求前，为他人的充分表达创造条件。如果过早地提及他人的请求，我们也许就无法传达我们的关心</code></li><li><code>怎样判断对方的感受是否已经充分表达呢？首先，如果一个人觉得别人已经完全明白他的意思，他就会变得轻松。这时，我们也会感到放松。另一个更为明显的标志是，他停止了谈话。如果无法确定对方是否还有话要说，就不妨问一句：“你还有什么话要告诉我吗？”</code></li><li><code>我们无法给别人我们自己都没有的东西。如果告诉他人我们正处于痛苦中，我们无法顾及他们的感受和需要，别人很可能就会伸出援手</code></li><li><code>一旦我们能够敏锐地察觉并照顾自己的感受和需要，我们就有能力迅速调整好状态，来倾听他人</code></li><li><code>我们需要先放下已有的想法和判断，全心全意地体会对方</code></li></ul><h4 id="例子">例子</h4><ul><li><p>甲：“你的表现让我很失望。我本来指望你们部门上个月的产出能够翻番。”</p><p>乙：“我知道你很失望。但上个月我们部门请病假的人很多。”</p></li><li><p>虽然乙提到了甲的感受，但乙主要是在辩解。如果乙用心倾听并给予反馈，他也许会说：“你看来很失望，你看重工作效率，是吗？”</p></li></ul><h3 id="倾听的力量">倾听的力量</h3><ul><li><code>在一个生气的人面前，永远不要用‘不过’‘可是’‘但是’之类的词语</code></li><li><code>有的时候，谈话的气氛很沉闷。我们体会不到说话的人有怎样的感受和需要，也不知道他对我们有什么期待。尽快提醒说话的人留意自己的感受和需要</code></li><li><code>打断别人比假装在听，更符合对方的愿望。所有的人都希望自己的话对人有益，而不想被人当作负担。</code></li></ul><h3 id="爱自己">爱自己</h3><ul><li><code>如果我们习惯于将自己视为工具——充满各种缺陷的工具，自我憎恨还令人奇怪吗？</code></li><li><code>一旦专注于尚未满足的需要，我们就会考虑如何满足它。反之，如果用苛刻的语言指责自己，我们不仅难以找到解决办法，而且容易陷于自我惩罚的痛苦中。</code></li><li><code>爱惜自己的关键之一是同时包容那两个不同的“我”：一方面包容对过去的某种行为感到后悔的“我”，另一方面包容采取那种行为的“我”。</code></li><li><code>一旦意识到我们的行为所服务的需要，即使工作很艰苦、富有挑战性乃至举步维艰，我们也会从中得到乐趣。</code></li><li><code>在日常生活中，我们主动根据需要和价值观来选择生活。用“选择做”来取代“不得不”</code></li></ul><h3 id="充分表达愤怒">充分表达愤怒</h3><ul><li><code>如果人们认为自己的痛苦是由其他人造成的，并认为那些人应该受到谴责或惩罚，那么，就像这位年轻的囚犯那样，他们播下了暴力的种子。</code></li><li><code>表达愤怒的四个步骤是：（1）停下来，除了呼吸，什么都别做；（2）想一想是什么想法使我们生气了；（3）体会自己的需要；（4）表达感受和尚未满足的需要。</code></li></ul><h3 id="表达感激">表达感激</h3><ul><li><p><code>用非暴力沟通的方式表达感激时，我们只是为了庆祝他人的行为提升了我们的生活品质，而不是想得到任何回报。</code></p></li><li><pre><code>  非暴力沟通表达感激的方式包含三个部分：  1.对方做了什么事情使我们的生活得到了改善；  2.我们有哪些需要得到了满足；  3.我们的心情怎么样？</code></pre></li><li><p><code>当我们让自己的光芒闪耀，无意中我们也允许了他人散发光芒。一旦我们从自我的恐惧中解放出来，我们的存在，也会让他人得到解放。”</code></p></li><li><p><code>即使人们在听到感激时会感到尴尬，他们也会想听到明确的表达</code></p></li><li><p><code>在表达感激时，我们说出：（1）对我们有益的行为；（2）我们的哪些需要得到了满足；（3）我们的需要得到满足后，我们是什么样的心情</code></p></li></ul><h2 id="总结">总结</h2><ul><li>观察、感受、需要、请求</li><li><strong>诚实地表达自己，而不批评、指责</strong></li><li><strong>关切地倾听他人，而不解读为批评或指责</strong></li><li></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;“非暴力沟通”中的暴力并不是指肢体上的暴力，语言也可以是一把刀。&lt;/p&gt;
&lt;p&gt;在这本书中我学到了很多，我应该会经常回看这本书。&lt;/p&gt;
&lt;p&gt;下面我记录我看书的时候所做的勾划。&lt;/p&gt;</summary>
    
    
    
    
    <category term="读书" scheme="https://ethanh3514.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
    <category term="非暴力沟通" scheme="https://ethanh3514.github.io/tags/%E9%9D%9E%E6%9A%B4%E5%8A%9B%E6%B2%9F%E9%80%9A/"/>
    
    <category term="总结" scheme="https://ethanh3514.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Spring Swagger 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-Swagger-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-Swagger-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T12:32:48.000Z</published>
    <updated>2024-04-14T03:15:00.240Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><h4 id="在spring-boot项目中引入swagger">在SpringBoot项目中引入Swagger</h4><ul><li>引入springfox-swagger2、springfox-swagger-ui依赖</li><li>在 <code>pom.xml</code> 中引入</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="op">&lt;</span>dependency<span class="op">&gt;</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="op">&lt;</span>groupId<span class="op">&gt;</span>io<span class="op">.</span><span class="fu">springfox</span><span class="op">&lt;/</span>groupId<span class="op">&gt;</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">&lt;</span>artifactId<span class="op">&gt;</span>springfox<span class="op">-</span>swagger2<span class="op">&lt;/</span>artifactId<span class="op">&gt;</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">&lt;</span>version<span class="op">&gt;</span><span class="fl">2.9.2</span><span class="op">&lt;/</span>version<span class="op">&gt;</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">&lt;/</span>dependency<span class="op">&gt;</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">&lt;</span>dependency<span class="op">&gt;</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">&lt;</span>groupId<span class="op">&gt;</span>io<span class="op">.</span><span class="fu">springfox</span><span class="op">&lt;/</span>groupId<span class="op">&gt;</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">&lt;</span>artifactId<span class="op">&gt;</span>springfox<span class="op">-</span>swagger<span class="op">-</span>ui<span class="op">&lt;/</span>artifactId<span class="op">&gt;</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="op">&lt;</span>version<span class="op">&gt;</span><span class="fl">2.9.2</span><span class="op">&lt;/</span>version<span class="op">&gt;</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="op">&lt;/</span>dependency<span class="op">&gt;</span></span></code></pre></div><ul><li>springboot 2.6以上版本和swagger不兼容，需要在<code>application.properties</code> 中加入</li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">mvc</span><span class="op">.</span><span class="fu">pathmatch</span><span class="op">.</span><span class="fu">matching</span><span class="op">-</span>strategy<span class="op">=</span>ant_path_matcher</span></code></pre></div><ul><li><code>com.hxy.helloworld/config/SwaggerConfig</code>加入配置信息</li></ul><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">package</span><span class="im"> com</span><span class="op">.</span><span class="im">hxy</span><span class="op">.</span><span class="im">mpdemo</span><span class="op">.</span><span class="im">config</span><span class="op">;</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">org</span><span class="op">.</span><span class="im">springframework</span><span class="op">.</span><span class="im">context</span><span class="op">.</span><span class="im">annotation</span><span class="op">.</span><span class="im">Bean</span><span class="op">;</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">org</span><span class="op">.</span><span class="im">springframework</span><span class="op">.</span><span class="im">context</span><span class="op">.</span><span class="im">annotation</span><span class="op">.</span><span class="im">Configuration</span><span class="op">;</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">springfox</span><span class="op">.</span><span class="im">documentation</span><span class="op">.</span><span class="im">builders</span><span class="op">.</span><span class="im">ApiInfoBuilder</span><span class="op">;</span></span><span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">springfox</span><span class="op">.</span><span class="im">documentation</span><span class="op">.</span><span class="im">builders</span><span class="op">.</span><span class="im">PathSelectors</span><span class="op">;</span></span><span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">springfox</span><span class="op">.</span><span class="im">documentation</span><span class="op">.</span><span class="im">builders</span><span class="op">.</span><span class="im">RequestHandlerSelectors</span><span class="op">;</span></span><span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">springfox</span><span class="op">.</span><span class="im">documentation</span><span class="op">.</span><span class="im">service</span><span class="op">.</span><span class="im">ApiInfo</span><span class="op">;</span></span><span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">springfox</span><span class="op">.</span><span class="im">documentation</span><span class="op">.</span><span class="im">spi</span><span class="op">.</span><span class="im">DocumentationType</span><span class="op">;</span></span><span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">springfox</span><span class="op">.</span><span class="im">documentation</span><span class="op">.</span><span class="im">spring</span><span class="op">.</span><span class="im">web</span><span class="op">.</span><span class="im">plugins</span><span class="op">.</span><span class="im">Docket</span><span class="op">;</span></span><span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">springfox</span><span class="op">.</span><span class="im">documentation</span><span class="op">.</span><span class="im">swagger2</span><span class="op">.</span><span class="im">annotations</span><span class="op">.</span><span class="im">EnableSwagger2</span><span class="op">;</span></span><span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a><span class="at">@Configuration</span></span><span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="at">@EnableSwagger2</span></span><span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> SwaggerConfig <span class="op">{</span></span><span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Bean</span></span><span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> Docket <span class="fu">createRestApi</span><span class="op">()</span> <span class="op">{</span></span><span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="fu">Docket</span><span class="op">(</span>DocumentationType<span class="op">.</span><span class="fu">SWAGGER_2</span><span class="op">)</span></span><span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">apiInfo</span><span class="op">(</span><span class="fu">apiInfo</span><span class="op">())</span></span><span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">select</span><span class="op">()</span></span><span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">apis</span><span class="op">(</span>RequestHandlerSelectors<span class="op">.</span><span class="fu">basePackage</span><span class="op">(</span><span class="st">"com"</span><span class="op">))</span></span><span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">paths</span><span class="op">(</span>PathSelectors<span class="op">.</span><span class="fu">any</span><span class="op">()).</span><span class="fu">build</span><span class="op">();</span></span><span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a></span><span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> ApiInfo <span class="fu">apiInfo</span><span class="op">()</span> <span class="op">{</span></span><span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="fu">ApiInfoBuilder</span><span class="op">()</span></span><span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">title</span><span class="op">(</span><span class="st">"演示项目API"</span><span class="op">)</span></span><span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">description</span><span class="op">(</span><span class="st">"演示项目"</span><span class="op">)</span></span><span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">version</span><span class="op">(</span><span class="st">"1.0"</span><span class="op">)</span></span><span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">build</span><span class="op">();</span></span><span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><ul><li>访问 <code>localhost:8080/swagger-ui.html</code></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="Swagger" scheme="https://ethanh3514.github.io/tags/Swagger/"/>
    
  </entry>
  
  <entry>
    <title>Spring 动态路径 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E5%8A%A8%E6%80%81%E8%B7%AF%E5%BE%84-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E5%8A%A8%E6%80%81%E8%B7%AF%E5%BE%84-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T12:21:07.000Z</published>
    <updated>2024-04-10T12:23:30.646Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><p>示例：</p><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RestController</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> UserController <span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@GetMapping</span><span class="op">(</span><span class="st">"/user/{id}"</span><span class="op">)</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">getUserById</span><span class="op">(</span><span class="at">@PathVariable</span> <span class="dt">int</span> id<span class="op">)</span> <span class="op">{</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>id<span class="op">);</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"根据ID获取用户信息"</span><span class="op">;</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="at">@PostMapping</span><span class="op">(</span><span class="st">"/user"</span><span class="op">)</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">save</span><span class="op">(</span>User user<span class="op">)</span> <span class="op">{</span></span><span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"添加用户"</span><span class="op">;</span></span><span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="at">@PutMapping</span><span class="op">(</span><span class="st">"/user"</span><span class="op">)</span></span><span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">update</span><span class="op">(</span>User user<span class="op">)</span> <span class="op">{</span></span><span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"更新用户"</span><span class="op">;</span></span><span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>    <span class="at">@DeleteMapping</span><span class="op">(</span><span class="st">"/user/{id}"</span><span class="op">)</span></span><span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">deleteById</span><span class="op">(</span><span class="at">@PathVariable</span> <span class="dt">int</span> id<span class="op">)</span> <span class="op">{</span></span><span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>id<span class="op">);</span></span><span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"根据ID删除用户"</span><span class="op">;</span></span><span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>要获取动态路径的参数需要加 <code>@PathVariable</code>，否则会获取后面的</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="动态路径" scheme="https://ethanh3514.github.io/tags/%E5%8A%A8%E6%80%81%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>Spring RESTful 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-RESTful-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-RESTful-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T11:52:04.000Z</published>
    <updated>2024-04-10T12:32:22.691Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><ul><li>是一种接口规范</li><li>每一个url代表一种资源</li><li>客户端使用 GET、POST、PUT、DELETE四种方式对服务端资源进行操作<ul><li>GET用于获取资源</li><li>POST用于新建资源（也可以更新）</li><li>PUT用于更新</li><li>DELETE用于删除</li></ul></li><li>对应的注解<ul><li><span class="citation" data-cites="GetMapping">@GetMapping</span></li><li><span class="citation" data-cites="PostMapping">@PostMapping</span></li><li><span class="citation" data-cites="PutMapping">@PutMapping</span></li><li><span class="citation" data-cites="DeleteMapping">@DeleteMapping</span></li><li><span class="citation" data-cites="PatchMapping">@PatchMapping</span></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="RESTful" scheme="https://ethanh3514.github.io/tags/RESTful/"/>
    
  </entry>
  
  <entry>
    <title>Spring 拦截器 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E6%8B%A6%E6%88%AA%E5%99%A8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E6%8B%A6%E6%88%AA%E5%99%A8-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T11:29:41.000Z</published>
    <updated>2024-04-10T11:51:08.121Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><ul><li>Spring Boot定义了HandlerInterceptor接口来实现自定义拦截器的功能</li><li>HandlerInterceptor接口定义了preHandle、postHandle、afterCompletion三种方法<ul><li>前端请求经过preHandle逐层调入控制器（从浅到深）</li><li>控制器的响应依次调用postHandle方法返回（从深到浅）</li><li>页面渲染完毕之后依次调用afterCompletion方法（从深到浅）</li></ul></li></ul><h4 id="拦截器的定义">拦截器的定义</h4><p>就是一个实现了 <code>HandlerInterceptor</code> 接口的类</p><p><code>com.hxy.helloworld/interceptor/LoginInterceptor.java</code></p><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> LoginInterceptor <span class="kw">implements</span> HandlerInterceptor <span class="op">{</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Override</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">boolean</span> <span class="fu">preHandle</span><span class="op">(</span>HttpServletRequest request<span class="op">,</span> HttpServletResponse response<span class="op">,</span> <span class="bu">Object</span> handler<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span><span class="op">{</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"LoginInterceptor"</span><span class="op">);</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="拦截器的注册">拦截器的注册</h4><ul><li><p>只定义没用，需要配置里注册</p></li><li><p><code>com.hxy.helloworld/config/Webconfig.java</code></p></li><li><p>可以指定拦截路径</p></li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Configuration</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> WebConfig <span class="kw">implements</span> WebMvcConfigurer <span class="op">{</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Override</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">addInterceptors</span><span class="op">(</span>InterceptorRegistry registry<span class="op">)</span> <span class="op">{</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>        registry<span class="op">.</span><span class="fu">addInterceptor</span><span class="op">(</span><span class="kw">new</span> <span class="fu">LoginInterceptor</span><span class="op">());</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>        <span class="co">//registry.addInterceptor(new LoginInterceptor()).addPathPatterns("/user/**");</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="拦截器" scheme="https://ethanh3514.github.io/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Spring 文件上传 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T10:49:41.000Z</published>
    <updated>2024-04-10T11:28:50.057Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><ul><li>Spring Boot工程嵌入的tomcat限制了请求的文件大小，每个文件的配置最大1Mb，单词请求的文件的总数不能大于10Mb</li><li>可以在配置文件（如application.properties）里更改</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">servlet</span><span class="op">.</span><span class="fu">multipart</span><span class="op">.</span><span class="fu">max</span><span class="op">-</span>file<span class="op">-</span>size<span class="op">=</span><span class="er">10</span>MB</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">servlet</span><span class="op">.</span><span class="fu">multipart</span><span class="op">.</span><span class="fu">max</span><span class="op">-</span>request<span class="op">-</span>size<span class="op">=</span><span class="er">10</span>MB</span></code></pre></div><p>示例</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RestController</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> FileUploadController <span class="op">{</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="co">//    @RequestMapping(value = "/upload", method = RequestMethod.POST)</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="at">@PostMapping</span><span class="op">(</span><span class="st">"/upload"</span><span class="op">)</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">up</span><span class="op">(</span><span class="bu">String</span> nickname<span class="op">,</span> MultipartFile photo<span class="op">,</span> HttpServletRequest request<span class="op">)</span> <span class="kw">throws</span> <span class="bu">IOException</span> <span class="op">{</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>nickname<span class="op">);</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>photo<span class="op">.</span><span class="fu">getOriginalFilename</span><span class="op">());</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="co">//        System.out.println(System.getProperty("user.dir"));</span></span><span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>photo<span class="op">.</span><span class="fu">getContentType</span><span class="op">());</span></span><span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> path <span class="op">=</span> request<span class="op">.</span><span class="fu">getServletContext</span><span class="op">().</span><span class="fu">getRealPath</span><span class="op">(</span><span class="st">"/upload/"</span><span class="op">);</span></span><span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>path<span class="op">);</span></span><span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>        <span class="fu">saveFile</span><span class="op">(</span>photo<span class="op">,</span> path<span class="op">);</span></span><span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"上传成功"</span><span class="op">;</span></span><span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">saveFile</span><span class="op">(</span>MultipartFile photo<span class="op">,</span> <span class="bu">String</span> path<span class="op">)</span> <span class="kw">throws</span> <span class="bu">IOException</span> <span class="op">{</span></span><span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>        <span class="bu">File</span> dir <span class="op">=</span> <span class="kw">new</span> <span class="bu">File</span><span class="op">(</span>path<span class="op">);</span></span><span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(!</span>dir<span class="op">.</span><span class="fu">exists</span><span class="op">())</span> <span class="op">{</span></span><span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>            dir<span class="op">.</span><span class="fu">mkdir</span><span class="op">();</span></span><span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>        <span class="bu">File</span> file <span class="op">=</span> <span class="kw">new</span> <span class="bu">File</span><span class="op">(</span>path<span class="op">,</span> photo<span class="op">.</span><span class="fu">getOriginalFilename</span><span class="op">());</span></span><span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>        photo<span class="op">.</span><span class="fu">transferTo</span><span class="op">(</span>file<span class="op">);</span></span><span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="文件上传" scheme="https://ethanh3514.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>Spring 静态资源 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T10:38:09.000Z</published>
    <updated>2024-04-10T10:49:59.703Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><h3 id="静态资源映射">静态资源映射</h3><p>静态资源默认在 <code>resources/static</code> 目录下</p><h4 id="静态资源过滤">静态资源过滤</h4><ul><li><p><code>application.properties</code> 文件中的配置信息</p></li><li><p>默认为 <code>/**</code> ，直接访问 <code>localhost:8080</code>之后加路径即可</p></li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">mvc</span><span class="op">.</span><span class="fu">static</span><span class="op">-</span>path<span class="op">-</span>pattern<span class="op">=</span><span class="co">/**</span>         </span></code></pre></div><ul><li>修改默认路径</li><li>访问静态资源需要为 <code>localhost:8080/images</code> 后加路径</li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">mvc</span><span class="op">.</span><span class="fu">static</span><span class="op">-</span>path<span class="op">-</span>pattern<span class="op">=/</span>images<span class="co">/**</span></span></code></pre></div><h4 id="静态资源位置">静态资源位置</h4><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>spring<span class="op">.</span><span class="fu">web</span><span class="op">.</span><span class="fu">resources</span><span class="op">.</span><span class="fu">static</span><span class="op">-</span>locations<span class="op">=</span>classpath<span class="op">:/</span><span class="dt">static</span><span class="op">/</span></span></code></pre></div><p>默认即 <code>target/classes</code> 下</p><p>一般不用调整</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="静态资源" scheme="https://ethanh3514.github.io/tags/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Spring Controller 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-Controller-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-Controller-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-10T08:56:13.000Z</published>
    <updated>2024-04-10T10:33:18.232Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><h3 id="控制器">控制器</h3><ul><li>Spring Boot 提供了 <code>@Controller</code> 和<code>@RestController</code> 两种注解来标识此类负责接收和处理http请求<ul><li><code>@Controller</code> 需要返回一个视图（可以理解为html页面）</li><li><code>@RestController</code> 可以以纯文本返回</li></ul></li></ul><h3 id="路由映射">路由映射</h3><ul><li><code>@RequestMapping("/user")</code></li><li>支持正则表达式匹配</li><li>Method 匹配：<code>@RequestMapping(value = "/getData", method = RequestMethod.GET)</code></li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RestController</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> HelloController <span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/hello"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">//    @GetMapping("/hello")</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="co">//这两种方式等价</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">hello</span><span class="op">()</span> <span class="op">{</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"你好"</span><span class="op">;</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>传参的参数名要对上</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/hello"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="co">//http://localhost:8080/hello?nickname=hxy</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">hello</span><span class="op">(</span><span class="bu">String</span> nickname<span class="op">,</span> <span class="bu">String</span> phone<span class="op">)</span> <span class="op">{</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>phone<span class="op">);</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"你好"</span> <span class="op">+</span> nickname<span class="op">;</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p><code>@RequestParam()</code> 指定必须参数，否则报错</p><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/getTest3"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getTest3</span><span class="op">(</span><span class="at">@RequestParam</span><span class="op">(</span><span class="st">"nickname"</span><span class="op">)</span> <span class="bu">String</span> name<span class="op">)</span> <span class="op">{</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"nickname:"</span> <span class="op">+</span> name<span class="op">);</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"GET请求"</span><span class="op">;</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>可以通过 <code>required=false</code> 关闭强制要求</p><div class="sourceCode" id="cb4"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/getTest3"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getTest3</span><span class="op">(</span><span class="at">@RequestParam</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"nickname"</span><span class="op">,</span>required <span class="op">=</span> <span class="kw">false</span><span class="op">)</span> <span class="bu">String</span> name<span class="op">)</span> <span class="op">{</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"nickname:"</span> <span class="op">+</span> name<span class="op">);</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"GET请求"</span><span class="op">;</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>用对象接收参数</p><div class="sourceCode" id="cb5"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/postTest1"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">POST</span><span class="op">)</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">postTest1</span><span class="op">(</span>User user<span class="op">)</span> <span class="op">{</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"POST请求"</span><span class="op">;</span></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>接收json</p><div class="sourceCode" id="cb6"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/postTest2"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">POST</span><span class="op">)</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">postTest2</span><span class="op">(</span><span class="at">@RequestBody</span> User user<span class="op">)</span> <span class="op">{</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"POST请求"</span><span class="op">;</span></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>通配符</p><div class="sourceCode" id="cb7"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="at">@RequestMapping</span><span class="op">(</span>value <span class="op">=</span> <span class="st">"/test/**"</span><span class="op">,</span> method <span class="op">=</span> RequestMethod<span class="op">.</span><span class="fu">GET</span><span class="op">)</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">postTest3</span><span class="op">()</span> <span class="op">{</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="st">"Hello"</span><span class="op">);</span></span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">"POST"</span><span class="op">;</span></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="Controller" scheme="https://ethanh3514.github.io/tags/Controller/"/>
    
  </entry>
  
  <entry>
    <title>Spring 热部署</title>
    <link href="https://ethanh3514.github.io/2024/04/10/Spring-%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    <id>https://ethanh3514.github.io/2024/04/10/Spring-%E7%83%AD%E9%83%A8%E7%BD%B2/</id>
    <published>2024-04-10T08:44:35.000Z</published>
    <updated>2024-04-10T08:49:36.024Z</updated>
    
    <content type="html"><![CDATA[<p>owo</p><span id="more"></span><ol type="1"><li>在 <code>pom.xml</code> 里加入依赖 devtools</li></ol><div class="sourceCode" id="cb1"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">dependency</span>&gt;</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">groupId</span>&gt;org.springframework.boot&lt;/<span class="kw">groupId</span>&gt;</span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">artifactId</span>&gt;spring-boot-devtools&lt;/<span class="kw">artifactId</span>&gt;</span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">optional</span>&gt;true&lt;/<span class="kw">optional</span>&gt;</span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">dependency</span>&gt;</span></code></pre></div><ol start="2" type="1"><li>在 <code>application.properties</code> 里加入配置信息</li></ol><pre><code># 热部署生效spring.devtools.restart.enabled=true# 设置重启目录spring.devtools.restart.additional-paths=src/main/java</code></pre><ol start="3" type="1"><li>设置 -&gt; 构建、执行、部署 -&gt; 编译器 -&gt; 自动构建项目</li><li>设置 -&gt; 高级设置 -&gt;即使开发的应用程序当前正在运行，也允许自动make启动</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;owo&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="热部署" scheme="https://ethanh3514.github.io/tags/%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>杂记 - 一些混乱的意象</title>
    <link href="https://ethanh3514.github.io/2024/04/10/%E6%9D%82%E8%AE%B0-%E4%B8%80%E4%BA%9B%E6%B7%B7%E4%B9%B1%E7%9A%84%E6%84%8F%E8%B1%A1/"/>
    <id>https://ethanh3514.github.io/2024/04/10/%E6%9D%82%E8%AE%B0-%E4%B8%80%E4%BA%9B%E6%B7%B7%E4%B9%B1%E7%9A%84%E6%84%8F%E8%B1%A1/</id>
    <published>2024-04-10T07:12:25.000Z</published>
    <updated>2024-04-10T07:31:57.619Z</updated>
    
    <content type="html"><![CDATA[<p>晚风，不再温柔</p><span id="more"></span><p>4.7</p><p>陌生的城市，陌生的街头，昏暗的夜色，星星点点的灯，潇潇的暮雨，微凉的风。熟悉的人，都已消散在时间的河流中。</p><p>无边的旷野，沙沙的蝉鸣，滴滴答答的时间，从不停留。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;晚风，不再温柔&lt;/p&gt;</summary>
    
    
    
    
    <category term="杂记" scheme="https://ethanh3514.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
    <category term="意象" scheme="https://ethanh3514.github.io/tags/%E6%84%8F%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Spring lombok 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/08/Spring-lombok-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/08/Spring-lombok-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-08T09:29:52.000Z</published>
    <updated>2024-04-08T09:40:36.050Z</updated>
    
    <content type="html"><![CDATA[<p>又是面向注解编程，这我怎么记得住啊qaq</p><span id="more"></span><ul><li>lombok是一个java类库</li><li>可以通过在类前加注解的方式自动生成javabean类内所需的方法</li><li>需要安装一个lombok插件（idea自带）</li></ul><h3 id="方法">方法</h3><ul><li><span class="citation" data-cites="Getter">@Getter</span>/<span class="citation" data-cites="Setter">@Setter</span></li><li><span class="citation" data-cites="ToString">@ToString</span></li><li><span class="citation" data-cites="EqualsAndHashCode">@EqualsAndHashCode</span></li><li><span class="citation" data-cites="Data">@Data</span></li><li><span class="citation" data-cites="NoArgsConstructor">@NoArgsConstructor</span>：无参构造</li><li><span class="citation" data-cites="AllArgsConstructor">@AllArgsConstructor</span>：全参构造</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;又是面向注解编程，这我怎么记得住啊qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://ethanh3514.github.io/tags/Java/"/>
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="lombok" scheme="https://ethanh3514.github.io/tags/lombok/"/>
    
  </entry>
  
  <entry>
    <title>Spring Mybatis 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/07/Spring-Mybatis-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/07/Spring-Mybatis-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-07T11:34:36.000Z</published>
    <updated>2024-04-10T13:29:17.482Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><span id="more"></span><h3 id="配置">配置</h3><h4 id="配置数据库信息">配置数据库信息</h4><h4 id="添加mapperscan注解">添加@MapperScan注解</h4><h3 id="预编译sql语句">预编译sql语句</h3><h4 id="section">#{...}</h4><ul><li>执行时会将#{...}替换为?，自动设置参数值</li><li>参数传递都使用</li><li>可以防止sql注入</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Delete</span><span class="op">(</span><span class="st">"delete from emp where id = #{id}"</span><span class="op">)</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">delete</span><span class="op">(</span><span class="bu">Integer</span> id<span class="op">);</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="section-1">${...}</h4><ul><li>直接将参数拼接在sql语句中，会存在注入问题</li><li>如果对表名、列表进行动态设置时使用</li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Delete</span><span class="op">(</span><span class="st">"delete from emp where id = ${id}"</span><span class="op">)</span></span></code></pre></div><h3 id="插入">插入</h3><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@insert</span><span class="op">(</span><span class="st">"insert into emp(username, name, gender,image,job,entrydate,dept_id,create_time,update_time) values ('Tom','汤姆',1,'1.jpg',1,'2005-01-01',1,now(),now())"</span><span class="op">)</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">insert</span><span class="op">();</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>采用类封装，注意传的参数是类的属性，需要驼峰命名</p><div class="sourceCode" id="cb4"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@insert</span><span class="op">(</span><span class="st">"insert into emp(username, name, gender,image,job,entrydate,dept_id,create_time,update_time) values (#{username},#{name},#{gender},#{image},#{job},#{entrydate},#{deptID},#{createTime},#{updateTime}"</span><span class="op">)</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">void</span> <span class="fu">insert</span><span class="op">(</span>Emp emp<span class="op">);</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>获取主键</p><p>会自动将生成的主键值，赋值给emp对象的id属性</p><div class="sourceCode" id="cb5"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Options</span><span class="op">(</span>keyProperty<span class="op">=</span><span class="st">"id"</span><span class="op">,</span>useGeneratedKeys<span class="op">=</span><span class="kw">true</span><span class="op">)</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="at">@insert</span><span class="op">(</span><span class="st">"insert into emp(username, name, gender,image,job,entrydate,dept_id,create_time,update_time) values (#{username},#{name},#{gender},#{image},#{job},#{entrydate},#{deptID},#{createTime},#{updateTime}"</span><span class="op">)</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">void</span> <span class="fu">insert</span><span class="op">(</span>Emp emp<span class="op">);</span></span></code></pre></div><h3 id="更新">更新</h3><div class="sourceCode" id="cb6"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Update</span><span class="op">(</span><span class="st">"update emp set username = #{username}, name = #{name}, gender = #{gender}, image = #{image}, job = #{job}, entrydate = #{entrydate}, dept_id = #{deptId}, update_time = #{updateTime} where id = #{id}"</span><span class="op">)</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">void</span> <span class="fu">update</span><span class="op">(</span>Emp emp<span class="op">);</span></span></code></pre></div><h3 id="查询">查询</h3><h4 id="通过主键">通过主键</h4><ul><li>给变量取别名，将下划线命名法映射为驼峰命名</li></ul><div class="sourceCode" id="cb7"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select id, username, password, name, gender, image, job, entrydate, dept_id deptId, create_time createTime, update_time updateTime, from emp where id = #{id}"</span><span class="op">)</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> Emp <span class="fu">getById</span><span class="op">(</span><span class="bu">Integer</span> id<span class="op">);</span></span></code></pre></div><ul><li>通过@Results, <span class="citation" data-cites="Result注解手动映射封装">@Result注解手动映射封装</span></li></ul><div class="sourceCode" id="cb8"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Results</span><span class="op">({</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Result</span><span class="op">(</span>column <span class="op">=</span> <span class="st">"dept_id"</span><span class="op">,</span> property <span class="op">=</span> <span class="st">"deptId"</span><span class="op">),</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Result</span><span class="op">(</span>column <span class="op">=</span> <span class="st">"create_time"</span><span class="op">,</span> property <span class="op">=</span> <span class="st">"createTime"</span><span class="op">),</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Result</span><span class="op">(</span>column <span class="op">=</span> <span class="st">"update_time"</span><span class="op">,</span> property <span class="op">=</span> <span class="st">"updateTime"</span><span class="op">)</span></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="op">})</span></span><span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select * from emp where id = #{id}"</span><span class="op">)</span></span><span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> Emp <span class="fu">getById</span><span class="op">(</span><span class="bu">Integer</span> id<span class="op">);</span></span></code></pre></div><ul><li>开启mybatis的驼峰命名自动映射开关， a_column -&gt; aColumn</li></ul><div class="sourceCode" id="cb9"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="co">//在application.properties中</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>mybatis<span class="op">.</span><span class="fu">configuration</span><span class="op">.</span><span class="fu">map</span><span class="op">-</span>underscore<span class="op">-</span>to<span class="op">-</span>camel<span class="op">-</span><span class="cf">case</span><span class="op">=</span><span class="kw">true</span></span></code></pre></div><h4 id="条件查询">条件查询</h4><ul><li>name作模糊匹配需要用$而不是#</li><li>会有注入问题</li></ul><div class="sourceCode" id="cb10"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select * from emp where name like '%${name}%' and gender = #{gender} and entrydate between #{begin} and #{end} order by update_time desc"</span><span class="op">)</span></span><span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">List</span><span class="op">&lt;</span>Emp<span class="op">&gt;</span> <span class="fu">list</span><span class="op">(</span><span class="bu">String</span> name<span class="op">,</span> <span class="bu">Short</span> gender<span class="op">,</span> LocalDate begin<span class="op">,</span> LocalDate end<span class="op">);</span></span></code></pre></div><ul><li>可以使用concat函数解决</li></ul><div class="sourceCode" id="cb11"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Select</span><span class="op">(</span><span class="st">"select * from emp where name like concat('%',#{name},'%') and gender = #{gender} and entrydate between #{begin} and #{end} order by update_time desc"</span><span class="op">)</span></span><span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">List</span><span class="op">&lt;</span>Emp<span class="op">&gt;</span> <span class="fu">list</span><span class="op">(</span><span class="bu">String</span> name<span class="op">,</span> <span class="bu">Short</span> gender<span class="op">,</span> LocalDate begin<span class="op">,</span> LocalDate end<span class="op">);</span></span></code></pre></div><h3 id="xml映射文件">XML映射文件</h3><ul><li>XML文件的名称与Mapper接口名称一致，并且将XML映射文件和Mapper接口放置在相同包下（同包同名）<ul><li>XML文件在resources文件夹下面，和Mapper接口的路径相仿</li></ul></li><li>XML文件的namespace属性为Mapper接口全限定名一致</li><li>XML文件中sql语句的id与Mapper接口中的方法名一致，并保持返回类型一致</li></ul><p>Mapper接口：</p><div class="sourceCode" id="cb12"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Mapper</span></span><span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> EmpMapper <span class="op">{</span></span><span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">List</span><span class="op">&lt;</span>Emp<span class="op">&gt;</span> <span class="fu">list</span><span class="op">(</span><span class="bu">String</span> name<span class="op">,</span> <span class="bu">Short</span> gender<span class="op">,</span> LocalDate begin<span class="op">,</span> LocalDate end<span class="op">);</span></span><span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>XML映射文件：</p><div class="sourceCode" id="cb13"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">mapper</span><span class="ot"> namespace=</span><span class="st">"com.itheima.mapper.EmpMapper"</span>&gt;</span><span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">select</span><span class="ot"> id=</span><span class="st">"list"</span><span class="ot"> resultType=</span><span class="st">"com.itheima.pojo.Emp"</span>&gt;</span><span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a>        select * from where name like concat('%', #{name}, '%') and gender=#{gender} and entrydate between #{begin} and #{end} order by update_time desc</span><span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a>    &lt;/<span class="kw">select</span>&gt;</span><span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">mapper</span>&gt;</span></code></pre></div><h2 id="动态sql">动态sql</h2><ul><li><code>&lt;if&gt;</code> 用于判断条件是否成立</li><li>如果条件为true，则拼接sql</li><li><code>&lt;if test="name != null"&gt;...&lt;/if&gt;</code></li><li><code>&lt;where&gt;</code> 用于动态生成where关键字</li><li>如果里面条件都不成立就不生成</li><li>可以自动处理里面条件里多余的 <code>and</code></li><li><code>&lt;set&gt;</code>动态地在行首插入set关键字，删掉额外的逗号</li></ul><div class="sourceCode" id="cb14"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb14-1"><a href="#cb14-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">select</span><span class="ot"> id=</span><span class="st">"list"</span><span class="ot"> resultType=</span><span class="st">"com.itheima.pojo.Emp"</span>&gt;</span><span id="cb14-2"><a href="#cb14-2" aria-hidden="true" tabindex="-1"></a>    select *</span><span id="cb14-3"><a href="#cb14-3" aria-hidden="true" tabindex="-1"></a>    from emp</span><span id="cb14-4"><a href="#cb14-4" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">where</span>&gt;</span><span id="cb14-5"><a href="#cb14-5" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">if</span><span class="ot"> test=</span><span class="st">"name != null"</span>&gt;</span><span id="cb14-6"><a href="#cb14-6" aria-hidden="true" tabindex="-1"></a>            name like concat('%', #{name}, '%')</span><span id="cb14-7"><a href="#cb14-7" aria-hidden="true" tabindex="-1"></a>        &lt;/<span class="kw">if</span>&gt;</span><span id="cb14-8"><a href="#cb14-8" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">if</span><span class="ot"> test=</span><span class="st">"gender != null"</span>&gt;</span><span id="cb14-9"><a href="#cb14-9" aria-hidden="true" tabindex="-1"></a>            and gender = #{gender}</span><span id="cb14-10"><a href="#cb14-10" aria-hidden="true" tabindex="-1"></a>        &lt;/<span class="kw">if</span>&gt;</span><span id="cb14-11"><a href="#cb14-11" aria-hidden="true" tabindex="-1"></a>        &lt;<span class="kw">if</span><span class="ot"> test=</span><span class="st">"begin != null and end != null"</span>&gt;</span><span id="cb14-12"><a href="#cb14-12" aria-hidden="true" tabindex="-1"></a>            and entrydate between #{begin} and #{end}</span><span id="cb14-13"><a href="#cb14-13" aria-hidden="true" tabindex="-1"></a>        &lt;/<span class="kw">if</span>&gt;</span><span id="cb14-14"><a href="#cb14-14" aria-hidden="true" tabindex="-1"></a>    &lt;/<span class="kw">where</span>&gt;</span><span id="cb14-15"><a href="#cb14-15" aria-hidden="true" tabindex="-1"></a>    order by update_time desc</span><span id="cb14-16"><a href="#cb14-16" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">select</span>&gt;</span></code></pre></div><h3 id="foreach遍历">foreach遍历</h3><ul><li>collection：遍历的集合</li><li>item：遍历出来的元素</li><li>separator：分隔符</li><li>open：遍历开始前拼接的sql片段</li><li>close：遍历结束后拼接的sql片段</li></ul><p>SQL语句：</p><div class="sourceCode" id="cb15"><pre class="sourceCode sql"><code class="sourceCode sql"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="kw">delete</span> <span class="kw">from</span> emp <span class="kw">where</span> <span class="kw">id</span> <span class="kw">in</span> (<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>);</span></code></pre></div><p>接口方法：</p><div class="sourceCode" id="cb16"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a><span class="co">//批量删除</span></span><span id="cb16-2"><a href="#cb16-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">void</span> <span class="fu">deleteByIds</span><span class="op">(</span><span class="bu">List</span><span class="op">&lt;</span><span class="bu">Integer</span><span class="op">&gt;</span> ids<span class="op">);</span></span></code></pre></div><p>XML映射文件</p><div class="sourceCode" id="cb17"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb17-1"><a href="#cb17-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">delete</span><span class="ot"> id=</span><span class="st">"deleteByIds"</span>&gt;</span><span id="cb17-2"><a href="#cb17-2" aria-hidden="true" tabindex="-1"></a>    delete from emp where id in</span><span id="cb17-3"><a href="#cb17-3" aria-hidden="true" tabindex="-1"></a>    &lt;<span class="kw">foreach</span><span class="ot"> collection=</span><span class="st">"ids"</span><span class="ot"> item=</span><span class="st">"id"</span><span class="ot"> separator=</span><span class="st">","</span><span class="ot"> open=</span><span class="st">"("</span><span class="ot"> close=</span><span class="st">")"</span>&gt;</span><span id="cb17-4"><a href="#cb17-4" aria-hidden="true" tabindex="-1"></a>        #{id}</span><span id="cb17-5"><a href="#cb17-5" aria-hidden="true" tabindex="-1"></a>    &lt;/<span class="kw">foreach</span>&gt;</span><span id="cb17-6"><a href="#cb17-6" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">delete</span>&gt;</span></code></pre></div><h3 id="sql标签">sql标签</h3><div class="sourceCode" id="cb18"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb18-1"><a href="#cb18-1" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">sql</span><span class="ot"> id=</span><span class="st">"01"</span>&gt;</span><span id="cb18-2"><a href="#cb18-2" aria-hidden="true" tabindex="-1"></a>    ...<span class="co">&lt;!-- sql语句 --&gt;</span></span><span id="cb18-3"><a href="#cb18-3" aria-hidden="true" tabindex="-1"></a>&lt;/<span class="kw">sql</span>&gt;</span><span id="cb18-4"><a href="#cb18-4" aria-hidden="true" tabindex="-1"></a>...</span><span id="cb18-5"><a href="#cb18-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb18-6"><a href="#cb18-6" aria-hidden="true" tabindex="-1"></a>&lt;<span class="kw">include</span><span class="ot"> refid=</span><span class="st">"01"</span>/&gt;<span class="co">&lt;!-- 语句引用 --&gt;</span></span></code></pre></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="Mybatis" scheme="https://ethanh3514.github.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Spring 分层解耦 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/06/Spring-%E5%88%86%E5%B1%82%E8%A7%A3%E8%80%A6-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/06/Spring-%E5%88%86%E5%B1%82%E8%A7%A3%E8%80%A6-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-06T13:50:29.000Z</published>
    <updated>2024-04-07T07:44:09.167Z</updated>
    
    <content type="html"><![CDATA[<p>qaq 面向注解编程真难学</p><span id="more"></span><h3 id="三层架构">三层架构</h3><ul><li><strong>Controller</strong>：控制层。接收请求，响应数据</li><li><strong>Service</strong>：业务逻辑层。处理具体的业务逻辑</li><li><strong>Dao</strong>：数据访问层（Data AccessObject)（持久层），负责数据访问操作</li></ul><h3 id="分层解耦">分层解耦</h3><ul><li>控制反转（IOC）（Inversion OfControl）：对象的创建控制权由程序自身转移到外部（容器）</li><li>依赖注入（DI）（DependencyInjection）：容器为应用程序提供运行时所依赖的资源</li><li>Bean对象：IOC容器中创建、管理的对象</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Component</span><span class="co">//将当前类交给IOC容器管理，成为IOC容器中的bean</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> EmpServiceA <span class="kw">implements</span> EmpService <span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span><span class="co">//运行时，IOC容器会提供这个类型的bean对象，并赋值 - 依赖注入</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> EmpDao empDao<span class="op">;</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">...</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="bean的声明">Bean的声明</h4><ul><li><code>@Component</code>：不属于下面三类的时候用</li><li><code>@Controller</code>：标注在控制器类上</li><li><code>@Service</code>：标在业务类上</li><li><code>@Repository</code>：标在数据访问类上</li></ul><p>注意：</p><ul><li>声明bean的时候，可以通过value属性指定bean的名字，没指定的话默认为<strong>类名首字母小写</strong></li><li>springboot集成web开发的时候，声明控制类bean只能用@Controller</li></ul><h4 id="组件扫描">组件扫描</h4><ul><li><p>声明的注解，需要被组件扫描注解@ComponentScan扫描才会生效</p></li><li><p><span class="citation" data-cites="ComponentScan注解没有显示配置">@ComponentScan注解没有显示配置</span>，实际上已经包含在启动类声明注解@SpringBootApplication，默认扫描范围是启动类所在包及其子包</p></li><li><p>可以自行声明注解@ComponentScan来管理扫描路径（不推荐）</p><ul><li>在启动类前加<code>@ComponentScan({"dao","com.hxy"})</code></li><li>因为会把默认的取代，所以需要加上原来的包</li></ul></li></ul><h3 id="bean注入">Bean注入</h3><ul><li><p><span class="citation" data-cites="Autowired默认按照类型注入">@Autowired默认按照类型注入</span>，若存在多个相同类型的bean，会报错</p></li><li><p>解决</p><ul><li><p><span class="citation" data-cites="Primary">@Primary</span>加在想要生效的类前</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Primary</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="at">@Service</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> EmpServiceA <span class="kw">implements</span> EmpService <span class="op">{</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="co">//...</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li><li><p><span class="citation" data-cites="Qualifier">@Qualifier</span>加在@Autowired前，<strong>类名首字母小写</strong></p><div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Autowired</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="at">@Qualifier</span><span class="op">(</span><span class="st">"empServiceA"</span><span class="op">)</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> EmpService empService<span class="op">;</span></span></code></pre></div></li><li><p><span class="citation" data-cites="Resource">@Resource</span>加载要注入的位置，替换@Autowired ，按照名称注入</p><div class="sourceCode" id="cb4"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Resource</span><span class="op">(</span>name <span class="op">=</span> <span class="st">"empServiceB"</span><span class="op">)</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> EmpService empService<span class="op">;</span></span></code></pre></div></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq 面向注解编程真难学&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="分层解耦" scheme="https://ethanh3514.github.io/tags/%E5%88%86%E5%B1%82%E8%A7%A3%E8%80%A6/"/>
    
  </entry>
  
  <entry>
    <title>Spring 请求响应 学习笔记</title>
    <link href="https://ethanh3514.github.io/2024/04/06/Spring-%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ethanh3514.github.io/2024/04/06/Spring-%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-04-06T13:03:27.000Z</published>
    <updated>2024-04-06T13:27:16.823Z</updated>
    
    <content type="html"><![CDATA[<p>qaq</p><p>极简地记一下</p><span id="more"></span><div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">package</span><span class="im"> com</span><span class="op">.</span><span class="im">hxy</span><span class="op">.</span><span class="im">controller</span><span class="op">;</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">com</span><span class="op">.</span><span class="im">hxy</span><span class="op">.</span><span class="im">pojo</span><span class="op">.</span><span class="im">User</span><span class="op">;</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">org</span><span class="op">.</span><span class="im">springframework</span><span class="op">.</span><span class="im">format</span><span class="op">.</span><span class="im">annotation</span><span class="op">.</span><span class="im">DateTimeFormat</span><span class="op">;</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">org</span><span class="op">.</span><span class="im">springframework</span><span class="op">.</span><span class="im">web</span><span class="op">.</span><span class="im">bind</span><span class="op">.</span><span class="im">annotation</span><span class="op">.*;</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">javax</span><span class="op">.</span><span class="im">servlet</span><span class="op">.</span><span class="im">http</span><span class="op">.</span><span class="im">HttpServletRequest</span><span class="op">;</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">java</span><span class="op">.</span><span class="im">time</span><span class="op">.</span><span class="im">LocalDateTime</span><span class="op">;</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">java</span><span class="op">.</span><span class="im">util</span><span class="op">.</span><span class="im">Arrays</span><span class="op">;</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="kw">import</span> <span class="im">java</span><span class="op">.</span><span class="im">util</span><span class="op">.</span><span class="im">List</span><span class="op">;</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="at">@RestController</span></span><span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> RequestController <span class="op">{</span></span><span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a><span class="co">//    @RequestMapping("/hello")</span></span><span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="co">//    public String hello(HttpServletRequest request) {</span></span><span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a><span class="co">//        String name = request.getParameter("name");</span></span><span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a><span class="co">//        String ageStr = request.getParameter("age");</span></span><span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a><span class="co">//</span></span><span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a><span class="co">//        int age = Integer.parseInt(ageStr);</span></span><span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a><span class="co">//        System.out.println(name + ": " + age);</span></span><span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a><span class="co">//</span></span><span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a><span class="co">//        return "OK";</span></span><span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a><span class="co">//    }</span></span><span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="co">//required指明参数是否必须</span></span><span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>    <span class="co">//RequestParam可以将名称手动映射</span></span><span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/hello"</span><span class="op">)</span></span><span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">hello</span><span class="op">(</span><span class="at">@RequestParam</span><span class="op">(</span>name <span class="op">=</span> <span class="st">"name"</span><span class="op">,</span> required <span class="op">=</span> <span class="kw">false</span><span class="op">)</span> <span class="bu">String</span> username<span class="op">,</span> <span class="bu">Integer</span> age<span class="op">)</span> <span class="op">{</span></span><span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>username <span class="op">+</span> <span class="st">": "</span> <span class="op">+</span> age<span class="op">);</span></span><span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>    <span class="co">//需要和实体对象的属性名一致</span></span><span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/simplePojo"</span><span class="op">)</span></span><span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">simplePojo</span><span class="op">(</span>User user<span class="op">)</span> <span class="op">{</span></span><span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>    <span class="co">//数组参数：需要请求参数名和形参中数组变量名相同</span></span><span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/arrayParam"</span><span class="op">)</span></span><span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">arrayParam</span><span class="op">(</span><span class="bu">String</span><span class="op">[]</span> hobby<span class="op">)</span> <span class="op">{</span></span><span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span><span class="bu">Arrays</span><span class="op">.</span><span class="fu">toString</span><span class="op">(</span>hobby<span class="op">));</span></span><span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>    <span class="co">//集合参数：需要请求参数名与形参中集合变量名相同，并且通过@RequestParam绑定参数关系</span></span><span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/listParam"</span><span class="op">)</span></span><span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">arrayParam</span><span class="op">(</span><span class="at">@RequestParam</span> <span class="bu">List</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> hobby<span class="op">)</span> <span class="op">{</span></span><span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>hobby<span class="op">);</span></span><span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>    <span class="co">//日期参数</span></span><span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/dateParam"</span><span class="op">)</span></span><span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">dateParam</span><span class="op">(</span><span class="at">@DateTimeFormat</span><span class="op">(</span>pattern <span class="op">=</span> <span class="st">"yyyy-MM-dd HH:mm:ss"</span><span class="op">)</span>LocalDateTime updateTime<span class="op">)</span> <span class="op">{</span></span><span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>updateTime<span class="op">);</span></span><span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>    <span class="co">//键名需要和对象中属性值一致</span></span><span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/jsonParam"</span><span class="op">)</span></span><span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">jsonParam</span><span class="op">(</span><span class="at">@RequestBody</span> User user<span class="op">)</span> <span class="op">{</span></span><span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>user<span class="op">);</span></span><span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/path/{id}"</span><span class="op">)</span></span><span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">pathParam</span><span class="op">(</span><span class="at">@PathVariable</span> <span class="bu">Integer</span> id<span class="op">)</span> <span class="op">{</span></span><span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>id<span class="op">);</span></span><span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-77"><a href="#cb1-77" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-78"><a href="#cb1-78" aria-hidden="true" tabindex="-1"></a>    <span class="at">@RequestMapping</span><span class="op">(</span><span class="st">"/path/{id}/{name}"</span><span class="op">)</span></span><span id="cb1-79"><a href="#cb1-79" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="bu">String</span> <span class="fu">pathParam2</span><span class="op">(</span><span class="at">@PathVariable</span> <span class="bu">Integer</span> id<span class="op">,</span> <span class="at">@PathVariable</span> <span class="bu">String</span> name<span class="op">)</span> <span class="op">{</span></span><span id="cb1-80"><a href="#cb1-80" aria-hidden="true" tabindex="-1"></a>        <span class="bu">System</span><span class="op">.</span><span class="fu">out</span><span class="op">.</span><span class="fu">println</span><span class="op">(</span>id <span class="op">+</span> <span class="st">": "</span> <span class="op">+</span> name<span class="op">);</span></span><span id="cb1-81"><a href="#cb1-81" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">"OK"</span><span class="op">;</span></span><span id="cb1-82"><a href="#cb1-82" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-83"><a href="#cb1-83" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h4 id="responsebody">ResponseBody</h4><ul><li>作用在方法上或类上</li><li>可以将方法返回值直接响应，如果返回值类型是<strong>实体对象/集合</strong>，将会转换为JSON格式响应</li><li><span class="citation" data-cites="RestController">@RestController</span> = <span class="citation" data-cites="Controller">@Controller</span> + <span class="citation" data-cites="ResponseBody">@ResponseBody</span></li></ul><h4 id="统一响应格式">统一响应格式</h4><ul><li><p>将各式各样的返回值统一</p><div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> <span class="bu">Result</span> <span class="op">{</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">//响应码，1表示成功，0表示失败</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="bu">Integer</span> code<span class="op">;</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="co">//提示信息</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="bu">String</span> msg<span class="op">;</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="co">//返回的数据</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="bu">Object</span> data<span class="op">;</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="co">//...</span></span><span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="co">//...</span></span><span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">static</span> <span class="bu">Result</span> <span class="fu">success</span><span class="op">(</span><span class="bu">Object</span> data<span class="op">)</span> <span class="op">{</span></span><span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Result</span><span class="op">(</span><span class="dv">1</span><span class="op">,</span> <span class="st">"success"</span><span class="op">,</span> data<span class="op">);</span></span><span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">static</span> <span class="bu">Result</span> <span class="fu">success</span><span class="op">()</span> <span class="op">{</span></span><span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Result</span><span class="op">(</span><span class="dv">1</span><span class="op">,</span> <span class="st">"success"</span><span class="op">,</span> <span class="kw">null</span><span class="op">);</span></span><span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="dt">static</span> <span class="bu">Result</span> <span class="fu">error</span><span class="op">(</span><span class="bu">String</span> msg<span class="op">)</span> <span class="op">{</span></span><span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">new</span> <span class="bu">Result</span><span class="op">(</span><span class="dv">0</span><span class="op">,</span> msg<span class="op">,</span> <span class="kw">null</span><span class="op">);</span></span><span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;qaq&lt;/p&gt;
&lt;p&gt;极简地记一下&lt;/p&gt;</summary>
    
    
    
    
    <category term="笔记" scheme="https://ethanh3514.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Web" scheme="https://ethanh3514.github.io/tags/Web/"/>
    
    <category term="Spring" scheme="https://ethanh3514.github.io/tags/Spring/"/>
    
    <category term="请求响应" scheme="https://ethanh3514.github.io/tags/%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
</feed>
